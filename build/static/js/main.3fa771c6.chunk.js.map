{"version":3,"sources":["components/Preloader/spinner.gif","redux/types/types.js","redux/actions/actions.js","components/Navbar/navbar.jsx","components/Preloader/preloader.jsx","components/Login/login.jsx","components/Registration/registration.jsx","components/RecipeForm/Category.jsx","components/RecipeForm/Ingredients.jsx","components/RecipeForm/Search.jsx","components/RecipeForm/Slider/Card.jsx","components/RecipeForm/Slider/Slider.jsx","components/RecipeForm/Instruction.jsx","components/RecipeForm/Submit.jsx","components/Uploader/uploader.jsx","components/RecipeForm/RecipeForm.jsx","components/RecipePage/IngredientsListTable.jsx","components/RecipePage/Meter.jsx","components/RecipePage/RecipePage.jsx","components/RecipeForm/RecipeEdit.jsx","components/Routes/privateRoute.jsx","components/Routes/homeRoute.jsx","components/RecipeItem/index.jsx","components/RecipeItem/RecipeItem.jsx","components/SortPanel/index.jsx","components/SortPanel/SortPanel.jsx","components/CategorySelector/CategorySelector.jsx","components/CategorySelector/index.jsx","components/RecipeList/index.jsx","components/RecipeList/RecipeList.jsx","components/Home/homepage.jsx","components/UserAccount/UserAccount.jsx","components/UserAccount/index.jsx","components/App/App.jsx","serviceWorker.js","redux/reducers/reducer.js","index.jsx","components/Navbar/logo.png"],"names":["module","exports","FETCHED_IS_LOGGED","FETCHED_LOGIN","FETCHED_REGISTER","FETCHED_LOGOUT","FETCHED_PARSE","isLoggedFetchAsyncAC","loginFetchAsyncAC","registerFetchAsyncAC","logoutFetchAsyncAC","parseFetchAsyncAC","watchFetches","isLoggedRequestAC","type","isLoggedGotResponseAC","result","isLoggedIn","userId","userName","isLoggedErrorAC","error","logRegstatusError","message","action","put","fetch","credentials","response","call","json","status","console","log","isLoggedFetchAC","loginRequestAC","loginGotResponseAC","loginErrorAC","err","method","headers","body","JSON","stringify","username","data","password","loginFetchAC","registerRequestAC","registerGotResponseAC","registrationStatus","registerErrorAC","email","registerFetchAC","logoutRequestAC","logoutGotResponseAC","logoutErrorAC","logoutFetchAC","parseRequestAC","parseGotResponseAC","ingredientsParsed","ingredients","parseErrorAC","parseError","productname","search","setCardDimensionsAC","parseFetchAC","cardHeight","cardWidth","takeEvery","clearStatusAC","Navbar","this","props","logoutFetch","Header","direction","width","align","justify","height","elevation","Box","Image","src","logo","fill","onClick","fakehandleClick","hoverIndicator","Button","as","Link","to","focusIndicator","Paragraph","textAlign","logout","bind","React","Component","connect","store","dispatch","preLoader","kind","color","size","Login","state","handleSubmit","clearStatus","values","loginFetch","margin","pad","border","Heading","level","top","bottom","basis","focusFirstChild","onSubmit","label","name","description","validation","validators","required","vertical","primary","alignSelf","gap","loadingFetch","Text","Registration","a","async","registerFetch","className","wordBreak","categories","Category","useState","options","category","setCategory","errors","setError","Select","id","placeholder","dropHeight","value","onChange","option","Ingredients","setIngredients","setPriceTotal","setCaloriesTotal","alignContent","animation","map","ingredient","key","Anchor","href","link","target","min","max","horizontal","TextInput","inputWeight","ingr","quantity","Math","ceil","weight","priceTotal","round","price","caloriesTotal","calories","newCalories","reduce","acc","newPrice","wrap","left","event","preventDefault","stopPropagation","newIngredients","filter","onFocus","background","FormClose","style","Search","setSearch","setValue","flex","IngredientCard","handleClick","updatedIngredients","concat","image","imageLink","position","behavior","scrollamount","currency","measureType","fit","side","AddCircle","Slider","numberOfCards","activeItemIndex","parseFetch","ingredientQuantity","length","setState","prevProps","padding","maxWidth","infiniteLoop","gutter","activePosition","chevronWidth","disableSwipe","alwaysShowChevrons","slidesToScroll","outsideChevron","showSlither","firstAndLastGutter","requestToChangeActive","rightChevron","icon","CaretNext","leftChevron","CaretPrevious","Instruction","newID","uuidv1","instruction","instructions","setInstructions","index","responsive","TextArea","plain","resize","text","newInstructions","instr","push","Submit","clickSubmit","Uploader","imagelink","send","acceptedFile","img","FormData","append","respJson","path","alert","setImage","onDrop","getRootProps","getInputProps","hrs","mins","RecipeForm","setName","hours","setHours","minutes","setMinutes","portions","setPortions","setId","portionsSuffix","setSuffix","right","suffix","parseFloat","newErrors","instructionsTrimmed","slice","recipeId","server","IngredientsListTable","ratio","defaultPortions","LabelledMeter","meterValue","meterType","Stack","anchor","Meter","thickness","RecipePage","portionCaption","window","scrollTo","match","params","recipe","authorName","author","totalCalories","totalPrice","countTotalCalories","countTotalPrice","infoRecipe","RecipeEdit","reload","_id","prevState","args","PrivateRoute","loading","isLoggedFetch","component","render","HomeRoute","RecipeItem","item","alt","textDecoration","DropButton","dropAlign","dropContent","SortPanel","directionCal","directionPrice","randomRecipesFromApi","toggleCal","togglePrice","recipesFromApiSortingByPrice","recipesFromApiSortingByCalories","priceButton","calorieButton","Grid","rows","columns","areas","start","end","gridArea","CategorySelector","recipesCategory","recipesFromApi","RecipeList","recipes","Home","UserAccount","deleteRecipe","responce","idx","findIndex","el","newRecipes","splice","App","Grommet","theme","hpe","exact","Boolean","location","hostname","initialState","questions","sagaMiddleware","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","run","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3fa771c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.e76d9411.gif\";","///////////////////////isLoggedChecking//////////////////////\nexport const IS_LOGGED_REQUEST = \"IS_LOGGED_REQUEST\";\nexport const IS_LOGGED_GOT_RESPONSE = \"IS_LOGGED_GOT_RESPONSE\";\nexport const IS_LOGGED_ERROR = \"IS_LOGGED_ERROR\";\nexport const FETCHED_IS_LOGGED = \"FETCHED_IS_LOGGED\";\n///////////////////////LOGIN////////////////////////////////\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_GOT_RESPONSE = \"LOGIN_GOT_RESPONSE\";\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\nexport const FETCHED_LOGIN = \"FETCHED_LOGIN\";\n////////////////////REGISTRATION////////////////////////////\nexport const REGISTER_REQUEST = \"REGISTER_REQUEST\";\nexport const REGISTER_GOT_RESPONSE = \"REGISTER_GOT_RESPONSE\";\nexport const REGISTER_ERROR = \"REGISTER_ERROR\";\nexport const FETCHED_REGISTER = \"FETCHED_REGISTER\";\n////////////////////////////////////////////////////////////\nexport const CLEAR_STATUS = \"CLEAR_STATUS\";\n///////////////////////LOGOUT//////////////////////////////\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_GOT_RESPONSE = \"LOGOUT_GOT_RESPONSE\";\nexport const LOGOUT_ERROR = \"LOGOUT_ERROR\";\nexport const FETCHED_LOGOUT = \"FETCHED_LOGOUT\";\n\n///////////////////////PARSE////////////////////////////////\nexport const PARSE_REQUEST = \"PARSE_REQUEST\";\nexport const PARSE_GOT_RESPONSE = \"PARSE_GOT_RESPONSE\";\nexport const PARSE_ERROR = \"PARSE_ERROR\";\nexport const FETCHED_PARSE = \"FETCHED_PARSE\";\n///////////////////SetCARDDimensions//////////////////\nexport const SET_CARD_DIMENSIONS = \"SET_CARD_DIMENSIONS\";\n","import { put, call, takeEvery } from 'redux-saga/effects';\nimport {\n  IS_LOGGED_GOT_RESPONSE,\n  IS_LOGGED_ERROR,\n  FETCHED_IS_LOGGED,\n  LOGIN_REQUEST,\n  LOGIN_GOT_RESPONSE,\n  LOGIN_ERROR,\n  FETCHED_LOGIN,\n  REGISTER_REQUEST,\n  REGISTER_GOT_RESPONSE,\n  REGISTER_ERROR,\n  FETCHED_REGISTER,\n  CLEAR_STATUS,\n  IS_LOGGED_REQUEST,\n  LOGOUT_REQUEST,\n  LOGOUT_GOT_RESPONSE,\n  LOGOUT_ERROR,\n  FETCHED_LOGOUT,\n  PARSE_REQUEST,\n  PARSE_GOT_RESPONSE,\n  PARSE_ERROR,\n  FETCHED_PARSE,\n  SET_CARD_DIMENSIONS\n} from '../types/types';\n\n// ///////////////////isLoggedChecking//////////////////////\nexport const isLoggedRequestAC = () => ({ type: IS_LOGGED_REQUEST });\n\nexport const isLoggedGotResponseAC = result => ({\n  type: IS_LOGGED_GOT_RESPONSE,\n  isLoggedIn: result.isLoggedIn,\n  userId: result.userId,\n  userName: result.userName\n});\n\nexport const isLoggedErrorAC = error => ({\n  type: IS_LOGGED_ERROR,\n  logRegstatusError: error.message,\n});\n\nexport function* isLoggedFetchAsyncAC(action) {\n  try {\n    yield put(isLoggedRequestAC());\n    const response = yield fetch('/api/users/isLogged', {\n      credentials: 'include'\n    });\n    const result = yield call(() => response.json());\n    if (response.status === 200) {\n      yield put(isLoggedGotResponseAC(result));\n    } else {\n      console.log(result);\n    }\n  } catch (error) {\n    yield put(isLoggedErrorAC(error));\n  }\n}\n\nexport const isLoggedFetchAC = () => ({ type: FETCHED_IS_LOGGED });\n\n// //////////////////////LOGIN/////////////////////////////\nexport const loginRequestAC = () => ({ type: LOGIN_REQUEST });\n\nexport const loginGotResponseAC = result => ({\n  type: LOGIN_GOT_RESPONSE,\n  isLoggedIn: result.isLoggedIn,\n  userId: result.userId,\n  userName: result.userName\n});\n\nexport const loginErrorAC = err => ({\n  type: LOGIN_ERROR,\n  logRegstatusError: err\n});\n\nexport function* loginFetchAsyncAC(action) {\n  try {\n    yield put(loginRequestAC());\n    const response = yield call(() =>\n      fetch('/api/users/login', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: action.data.username,\n          password: action.data.password\n        })\n      })\n    );\n    if (response.status === 200) {\n      const result = yield call(() => response.json());\n      yield put(loginGotResponseAC(result));\n    } else if (response.status === 400) {\n      const err = yield call(() => response.json());\n      yield put(loginErrorAC(err));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const loginFetchAC = data => ({ type: FETCHED_LOGIN, data });\n\n// ////////////////////REGISTRATION/////////////////////\n\nexport const registerRequestAC = () => ({ type: REGISTER_REQUEST });\n\nexport const registerGotResponseAC = result => ({\n  type: REGISTER_GOT_RESPONSE,\n  registrationStatus: result.registrationStatus\n});\n\nexport const registerErrorAC = err => ({\n  type: REGISTER_ERROR,\n  logRegstatusError: err\n});\n\nexport function* registerFetchAsyncAC(action) {\n  try {\n    yield put(registerRequestAC());\n    const response = yield call(() =>\n      fetch('/api/users/registration', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: action.data.username,\n          password: action.data.password,\n          email: action.data.email\n        })\n      })\n    );\n    if (response.status === 200) {\n      const result = yield call(() => response.json());\n      yield put(registerGotResponseAC(result));\n    } else if (response.status === 400) {\n      const err = yield call(() => response.json());\n      yield put(registerErrorAC(err));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const registerFetchAC = data => ({ type: FETCHED_REGISTER, data });\n\n// ////////////////////////LOGOUT/////////////////////////////\nexport const logoutRequestAC = () => ({ type: LOGOUT_REQUEST });\n\nexport const logoutGotResponseAC = result => ({\n  type: LOGOUT_GOT_RESPONSE,\n  isLoggedIn: result.isLoggedIn\n});\n\nexport const logoutErrorAC = error => ({\n  type: LOGOUT_ERROR,\n  logRegstatusError: error.message\n});\n\nexport function* logoutFetchAsyncAC(action) {\n  try {\n    yield put(logoutRequestAC());\n    const response = yield fetch('/api/users/logout', {\n      credentials: 'include',\n      method: 'DELETE'\n    });\n    const result = yield call(() => response.json());\n    if (response.status === 200) {\n      yield put(logoutGotResponseAC(result));\n    } else {\n      console.log(result);\n    }\n  } catch (error) {\n    yield put(logoutErrorAC(error));\n  }\n}\n\nexport const logoutFetchAC = () => ({ type: FETCHED_LOGOUT });\n\n// //////////////////////PARSE//////////////////////////////\n\nexport const parseRequestAC = () => ({ type: PARSE_REQUEST });\n\nexport const parseGotResponseAC = result => ({\n  type: PARSE_GOT_RESPONSE,\n  ingredientsParsed: result.ingredients\n});\n\nexport const parseErrorAC = err => ({\n  type: PARSE_ERROR,\n  parseError: err,\n});\n\nexport function* parseFetchAsyncAC(action) {\n  console.log('Parse Func Called');\n\n  try {\n     console.log('parse');\n    yield put(parseRequestAC());\n    const response = yield fetch('/api/parses/', {\n      method: 'POST',\n      headers: { 'Content-type': 'application/json' },\n      body: JSON.stringify({ productname: action.data.search })\n    });\n    if (response.status === 200) {\n      const result = yield call(() => response.json());\n      yield put(parseGotResponseAC(result));\n      yield put(setCardDimensionsAC(action.data));\n    } else if (response.status === 204) {\n      let err = true;\n      yield put(parseErrorAC(err));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport const parseFetchAC = data => ({ type: FETCHED_PARSE, data });\n\n// //////////////////////setCardDimensions///////////////////\n\nexport const setCardDimensionsAC = data => ({\n  type: SET_CARD_DIMENSIONS,\n  cardHeight: data.cardHeight,\n  cardWidth: data.cardWidth\n});\n\n// ///////////////////WatchFetches//////////////////////////\n\nexport function* watchFetches() {\n  yield takeEvery(FETCHED_IS_LOGGED, isLoggedFetchAsyncAC);\n  yield takeEvery(FETCHED_LOGIN, loginFetchAsyncAC);\n  yield takeEvery(FETCHED_REGISTER, registerFetchAsyncAC);\n  yield takeEvery(FETCHED_LOGOUT, logoutFetchAsyncAC);\n  yield takeEvery(FETCHED_PARSE, parseFetchAsyncAC);\n}\n\n// /////////////////clearStatusAC//////////////////////\n\nexport const clearStatusAC = () => ({ type: CLEAR_STATUS });\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './navbar.css'\nimport { Box, Anchor, Header, Image, Button, Paragraph } from 'grommet';\nimport { logoutFetchAC } from '../../redux/actions/actions';\nimport logo from './logo.png'\n\nclass Navbar extends React.Component {\n  async logout() {\n    // logout на сервер\n    this.props.logoutFetch();\n  }\n\n  fakehandleClick() {\n\n  }\n\n  render() {\n    return (\n      <Header direction=\"row\" width=\"80%\" align=\"center\" justify=\"center\" height=\"60px\" elevation=\"medium\">\n        <Box direction=\"row\" align=\"center\" justify=\"center\" height=\"100%\" width=\"auto\">\n          <Box align=\"center\" justify=\"center\"\n            height=\"100%\" width=\"11%\"\n          >\n            <Image src={logo} height=\"100%\" width=\"100%\" fill=\"true\" />\n          </Box>\n          <Box align=\"center\" justify=\"center\"\n            height=\"100%\" width=\"12%\"\n            onClick={this.fakehandleClick}\n            hoverIndicator\n          >\n            <Button as={Link} to=\"/\"\n              align=\"center\" justify=\"center\"\n              fill=\"true\"\n              onClick={this.fakehandleClick}\n              focusIndicator=\"false\"\n            >\n              <Paragraph fill=\"true\" textAlign=\"center\">ГЛАВНАЯ</Paragraph>\n            </Button>\n          </Box>\n          {this.props.isLoggedIn ? (\n            <>\n              <Box align=\"center\" justify=\"center\"\n                height=\"100%\" width=\"19%\"\n                onClick={this.fakehandleClick}\n                hoverIndicator\n              >\n                <Button as={Link} to={`/users/${this.props.userName}`}\n                  align=\"center\" justify=\"center\"\n                  fill=\"true\"\n                  onClick={this.fakehandleClick}\n                  focusIndicator=\"false\"\n                >\n                  <Paragraph fill=\"true\" textAlign=\"center\">МОИ РЕЦЕПТЫ</Paragraph>\n                </Button>\n              </Box>\n              <Box align=\"center\" justify=\"center\"\n                height=\"100%\" width=\"21%\"\n                onClick={this.fakehandleClick}\n                hoverIndicator\n              >\n                <Button as={Link} to=\"/recipes/new\"\n                  align=\"center\" justify=\"center\"\n                  onClick={this.fakehandleClick} focusIndicator=\"false\"\n                  fill=\"true\">\n                  <Paragraph fill=\"true\" textAlign=\"center\">СОЗДАТЬ РЕЦЕПТ</Paragraph>\n                </Button>\n              </Box>\n              <Box align=\"center\" justify=\"center\"\n                height=\"100%\"\n                width=\"10%\"\n                onClick={this.fakehandleClick}\n                hoverIndicator>\n                <Button as={Link} to=\"/\" align=\"center\" justify=\"center\" onClick={this.logout.bind(this)} focusIndicator=\"false\" fill=\"true\">\n                  <Paragraph fill=\"true\" textAlign=\"center\">ВЫЙТИ</Paragraph>\n                </Button>\n              </Box>\n            </>\n          ) : (\n              <>\n                <Box align=\"center\" justify=\"center\"\n                  height=\"100%\" width=\"10%\"\n                  onClick={this.fakehandleClick}\n                  hoverIndicator\n                >\n                  <Button as={Link} to=\"/login\" align=\"center\" justify=\"center\"\n                    onClick={this.fakehandleClick}\n                    focusIndicator=\"false\"\n                    fill=\"true\"\n                  >\n                    <Paragraph fill=\"true\" textAlign=\"center\">\n                      ВОЙТИ\n                    </Paragraph>\n                  </Button>\n                </Box>\n                <Box align=\"center\" justify=\"center\"\n                  height=\"100%\" width=\"18%\"\n                  onClick={this.fakehandleClick} \n                  hoverIndicator\n                >\n                  <Button as={Link} to=\"/registration\" align=\"center\" justify=\"center\"\n                    onClick={this.fakehandleClick}\n                    focusIndicator=\"false\"\n                    fill=\"true\"\n                    hoverIndicator\n                  >\n                    <Paragraph fill=\"true\" textAlign=\"center\">\n                      РЕГИСТРАЦИЯ\n                    </Paragraph>\n                  </Button>\n                </Box>\n              </>\n            )}\n        </Box>\n      </Header>\n    );\n  }\n}\nfunction mapStateToProps(store) {\n  return {\n    isLoggedIn: store.isLoggedIn,\n    userId: store.userId,\n    userName: store.userName\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logoutFetch: () => dispatch(logoutFetchAC())\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n\n// const response = await fetch(\"http://localhost:5000/api/logout\", {method: 'DELETE',\n// credentials: \"include\"})\n// if (response.status === 200) {\n//   let result = await response.json()\n//   let isLoggedIn = result.isLoggedIn\n//   console.log(result);\n//   this.props.sessionChecker(isLoggedIn)\n// } else {\n//   console.log(`ERROR: ${response.status}`);\n// }\n","import React from 'react';\nimport { Image, Box } from 'grommet';\nimport gif from './spinner.gif';\nimport { Spinning } from 'grommet-controls';\n\nconst preLoader = () => (\n  // вернуть инструкции по желанию\n  <Box width=\"200px\" height=\"200px\" justify=\"center\" align=\"center\">\n    <Spinning kind=\"wave\" color=\"#2ad2c9\" size=\"small\" />\n    {/* <Image src={gif} /> */}\n  </Box>\n);\n\nexport default preLoader;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { loginFetchAC, clearStatusAC } from '../../redux/actions/actions';\nimport Preloader from '../Preloader/preloader';\nimport { Box, Text, Button, Heading } from 'grommet';\n\nimport {\n  TextInputField,\n  Form,\n  PasswordInputField,\n  validators\n} from 'grommet-controls';\n\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillUnmount() {\n    this.props.clearStatus();\n  }\n\n  async handleSubmit(values) {\n    this.props.loginFetch({\n      username: values.username,\n      password: values.password\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width=\"30%\"\n        margin=\"large\"\n        pad=\"large\"\n        border={{ color: 'border' }}\n        justify=\"center\"\n        align=\"center\"\n        elevation=\"medium\"\n      >\n        <Heading\n          level=\"2\"\n          margin={{\n            top: 'none',\n            bottom: 'small'\n          }}\n          \n        >\n          Вход\n        </Heading>\n        <Form\n          basis=\"medium\"\n          focusFirstChild={false}\n          {...this.props}\n          onSubmit={this.handleSubmit}\n        >\n          <TextInputField label=\"Имя\" name=\"username\" />\n          <PasswordInputField\n            label={\n              <Box direction=\"row\" align=\"center\" justify=\"between\">\n                Пароль\n              </Box>\n            }\n            description=\"Password\"\n            name=\"password\"\n            validation={[validators.required()]}\n          />\n          <Box pad={{ vertical: 'medium' }} align=\"end\">\n            <Button\n              hoverIndicator=\"background\"\n              primary\n              type=\"submit\"\n              alignSelf=\"center\"\n              label=\"Войти\"\n            />\n          </Box>\n          <Box direction=\"row\" alignSelf=\"center\" gap=\"small\" align=\"center\" />\n        </Form>\n        <Box>\n          {this.props.loadingFetch ? (\n            <Preloader />\n          ) : this.props.isLoggedIn ? (\n            <Redirect to=\"/\" />\n          ) : (\n            <Text>{this.props.logRegstatusError}</Text>\n          )}\n        </Box>\n      </Box>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return {\n    isLoggedIn: store.isLoggedIn,\n    loadingFetch: store.loadingFetch,\n    logRegstatusError: store.logRegstatusError,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loginFetch: data => dispatch(loginFetchAC(data)),\n    clearStatus: () => dispatch(clearStatusAC()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { registerFetchAC, clearStatusAC } from '../../redux/actions/actions';\n\n\nimport { Box, Text, Button, Heading } from 'grommet';\nimport { Form, TextInputField, PasswordInputField, EmailInputField, validators } from 'grommet-controls';\nimport Preloader from \"../Preloader/preloader\"\n\n\nclass Registration extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      username: '',\n      password: '',\n      email: '',\n    };\n  }\n\n  handleSubmit = async (values) => {\n    // event.preventDefault();\n    this.props.registerFetch({\n      username: values.username,\n      password: values.password,\n      email: values.email,\n    })\n  }\n\n  componentWillUnmount() {\n    this.props.clearStatus()\n  }\n\n  render() {\n    return (\n      <Box width=\"30%\" margin=\"large\" \n      pad=\"large\" border={{ \"color\": \"border\" }}  \n      justify=\"center\" elevation=\"medium\"\n      >\n        <Heading level=\"2\"\n          margin={{\n            top: 'none',\n            bottom: 'small'\n          }}\n          align=\"center\"\n        >\n          Регистрация\n        </Heading>\n        <Form\n          basis='medium'\n          focusFirstChild={false}\n          onSubmit={this.handleSubmit}\n        >\n          <TextInputField label='Имя' name='username' />\n          <PasswordInputField\n            label='Пароль'\n            name='password'\n            validation={\n              [validators.required()]\n            }\n          />\n          <EmailInputField label='Email' name='email' validation={[validators.required(), validators.email()]} />\n          <Box pad={{ vertical: 'medium' }} align='end' align=\"center\">\n            <Button hoverIndicator='background' primary={true} type='submit' label='Зарегистрироваться' />\n          </Box>\n        </Form >\n        <Box>\n          {this.props.loadingFetch\n            ? <Preloader />\n            : this.props.logRegstatusError\n              ? <Text className={'statustext'} wordBreak=\"break-word\">{this.props.logRegstatusError}</Text>\n              : <Text className={'statustext'}wordBreak=\"break-word\">{this.props.registrationStatus}</Text>\n          }\n        </Box>\n      </Box>\n    )\n  }\n}\n\nfunction mapStateToProps(store) {\n  return {\n    loadingFetch: store.loadingFetch,\n    logRegstatusError: store.logRegstatusError,\n    registrationStatus: store.registrationStatus,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    registerFetch: data => dispatch(registerFetchAC(data)),\n    clearStatus: () => dispatch(clearStatusAC())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Registration)\n\n","import React, { useState } from 'react';\nimport { Box, Select } from 'grommet';\n\nconst categories = [\n  'Холодная закуска',\n  'Горячая закуска',\n  'Суп',\n  'Горячее блюдо',\n  'Салат',\n  'Каша',\n  'Паста',\n  'Десерт'\n];\n\nexport default function Category(props) {\n  const [options, setOptions] = useState(categories);\n  const { category, setCategory, errors, setError } = props;\n  return (\n    <Box fill align=\"start\" justify=\"center\">\n      <Select\n        id=\"category\"\n        className=\"input\"\n        name=\"category\"\n        size=\"medium\"\n        placeholder=\"Выберите категорию блюда\"\n        dropHeight=\"small\"\n        value={category}\n        options={options}\n        onChange={({ option }) => {\n          setError({ ...errors, category: '' });\n          setCategory(option);\n        }}\n        // onClose={() => setOptions(categories)}\n        // onSearch={text => {\n        //   // The line below escapes regular expression special characters:\n        //   // [ \\ ^ $ . | ? * + ( )\n        //   const escapedText = text.replace(/[-\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n        //   // Create the regular expression with modified value which\n        //   // handles escaping special characters. Without escaping special\n        //   // characters, errors will appear in the console\n        //   const exp = new RegExp(escapedText, 'i');\n        //   setOptions(categories.filter(o => exp.test(o)));\n        // }}\n      />\n    </Box>\n  );\n}\n","import React from 'react';\nimport { Box, TextInput, Button, Text, Paragraph, Anchor } from 'grommet';\nimport { FormClose } from 'grommet-icons';\nimport './recipeForm.css';\n\nexport default function Ingredients(props) {\n  const {\n    ingredients,\n    setIngredients,\n    setPriceTotal,\n    setCaloriesTotal\n  } = props;\n  return (\n    <Box\n      alignSelf=\"center\"\n      alignContent=\"center\"\n      elevation=\"xsmall\"\n      width=\"900px\"\n      animation=\"fadeIn\"\n    >\n      <table>\n        <thead>\n          <tr>\n            <th />\n            <th>Вес</th>\n            <th>Ккал</th>\n            <th>Цена</th>\n            <th>Шт</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {ingredients.map(ingredient => (\n            <tr key={ingredient.id} className=\"testText \">\n              <td className=\"paddingTd\">\n                <Anchor\n                  label={ingredient.name}\n                  href={ingredient.link}\n                  target=\"_blank\"\n                />\n              </td>\n              <td width=\"8%\">\n                <Box\n                  width={{ min: '70px', max: '70px' }}\n                  margin={{ vertical: '0px', horizontal: '0px' }}\n                  align=\"center\"\n                  alignContent=\"center\"\n                  alignSelf=\"center\"\n                  direction=\"row\"\n                >\n                  <TextInput\n                    placeholder=\"Вес\"\n                    className=\"input\"\n                    value={ingredient.inputWeight}\n                    onChange={({ target: { value } }) => {\n                      setIngredients(\n                        ingredients.map(ingr => {\n                          if (ingr.id === ingredient.id) {\n                            ingr.inputWeight = value;\n                            ingr.quantity = Math.ceil(value / ingr.weight);\n                            ingr.priceTotal = Math.round(ingr.quantity * ingr.price);\n                            ingr.caloriesTotal = Math.round((value / 100) * ingr.calories);\n                          }\n                          return ingr;\n                        })\n                      );\n                      const newCalories = Math.round(\n                        ingredients.reduce(\n                          (acc, ingr) => acc + ingr.caloriesTotal,\n                          0\n                        )\n                      );\n                      setCaloriesTotal(newCalories);\n                      const newPrice = Math.round(\n                        ingredients.reduce(\n                          (acc, ingr) => acc + ingr.priceTotal,\n                          0\n                        )\n                      );\n                      setPriceTotal(newPrice);\n                    }}\n                  />\n                </Box>\n              </td>\n              <td className=\"centered\">{ingredient.caloriesTotal}</td>\n              <td className=\"centered\">{ingredient.priceTotal}</td>\n              <td className=\"centered\">{ingredient.quantity}</td>\n              <td width=\"8%\">\n                <Box\n                  wrap\n                  direction=\"row\"\n                  width=\"10px\"\n                  round=\"full\"\n                  margin={{ left: 'xsmall' }}\n                >\n                  <Button\n                    href=\"#\"\n                    onClick={event => {\n                      event.preventDefault();\n                      event.stopPropagation();\n                      const newIngredients = ingredients.filter(\n                        ingr => ingr.id !== ingredient.id\n                      );\n                      setIngredients(newIngredients);\n                    }}\n                    onFocus={event => event.stopPropagation()}\n                  >\n                    <Box\n                      background=\"accent-1\"\n                      round=\"full\"\n                      margin={{ left: '15px' }}\n                    >\n                      <FormClose\n                        color=\"white\"\n                        size=\"small\"\n                        style={{ width: '25px', height: '25px' }}\n                      />\n                    </Box>\n                  </Button>\n                </Box>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Box>\n  );\n}\n","import React, { useState } from 'react';\nimport { Box, TextInput, Paragraph, Button, Text } from 'grommet';\nimport './recipeForm.css';\n\nexport default function Search(props) {\n  const { setSearch } = props;\n  const [value, setValue] = useState('');\n  return (\n    <Box\n      alignSelf=\"center\"\n      direction=\"row\"\n      round=\"small\"\n      // elevation=\"small\"\n      fill={false}\n      flex=\"grow\"\n      width={{ min: '900px', max: '900px' }}\n    >\n      <Box\n        width={{ min: '750px', max: '750px' }}\n        // elevation=\"small\"\n        fill\n        round=\"small\"\n      >\n        <TextInput\n          // elevation=\"small\"\n          className=\"input\"\n          placeholder=\"Введите название ингредиента\"\n          value={value}\n          onChange={event => setValue(event.target.value)}\n        />\n      </Box>\n      <Box\n        alignContent=\"center\"\n        // basis=\"large\"\n        // border=\"bottom\"\n        direction=\"row\"\n        flex=\"grow\"\n        focusIndicator={false}\n      >\n        <Button focusIndicator={false} href=\"#\">\n          <Box\n            onClick={event => {\n              event.preventDefault();\n              event.stopPropagation();\n              setSearch(value);\n            }}\n            onFocus={event => event.stopPropagation()}\n            hoverIndicator\n            height=\"50px\"\n            focusIndicator={true}\n            // align=\"center\"\n            direction=\"row\"\n            // gap=\"xsmall\"\n            pad={{ vertical: '0px', horizontal: '43px' }}\n            margin={{ vertical: '0px', horizontal: '10px' }}\n            width={{ min: '140px', max: '140px' }}\n            background=\"accent-1\"\n            round=\"small\"\n            elevation=\"small\"\n          >\n            <Paragraph\n              className=\"button\"\n              alignSelf=\"center\"\n              textAlign=\"center\"\n              elevation=\"small\"\n            >\n              НАЙТИ\n            </Paragraph>\n          </Box>\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\nimport { Box, Text } from 'grommet';\nimport { AddCircle } from 'grommet-icons';\n\nimport './Card.css';\n\nexport default class IngredientCard extends React.Component {\n  handleClick = () => {\n    const {\n      ingredient,\n      ingredients,\n      setIngredients,\n      setPriceTotal,\n      setCaloriesTotal,\n      setSearch,\n      errors,\n      setError\n    } = this.props;\n    ingredient.priceTotal = ingredient.quantity * ingredient.price;\n    ingredient.caloriesTotal = (ingredient.weight / 100) * ingredient.calories;\n    ingredient.inputWeight = ingredient.weight;\n    const updatedIngredients = ingredients.concat([ingredient]);\n    setIngredients(updatedIngredients);\n    setCaloriesTotal(\n      updatedIngredients.reduce((acc, ingr) => acc + ingr.caloriesTotal, 0)\n    );\n    setPriceTotal(\n      updatedIngredients.reduce((acc, ingr) => acc + ingr.priceTotal, 0)\n    );\n    setError({ ...errors, ingredients: '' });\n    setSearch('');\n  };\n  render() {\n    return (\n      <Box\n        // width={String(this.props.cardWidth)}\n        // height={String(this.props.cardHeight)}\n        width=\"25vw\"\n        height=\"22vw\"\n        className={'wrapper'}\n        border={{ color: 'border' }}\n      >\n        <Box direction=\"column\" height=\"100%\" width=\"100%\">\n          <Box\n            height=\"100%\"\n            width=\"100%\"\n            background={{\n              image: `url(${this.props.ingredient.imageLink})`,\n              position: 'center'\n            }}\n          />\n          <Box\n            className={'bottom'}\n            direction=\"row-responsive\"\n            height=\"35%\"\n            width=\"100%\"\n          >\n            <Box\n              className={'details'}\n              height=\"100%\"\n              width=\"70%\"\n              direction=\"column\"\n              align=\"center\"\n              pad=\"1px\"\n            >\n              <Box>\n                <Box width=\"100%\">\n                  <marquee\n                    behavior=\"alternate\"\n                    scrollamount=\"2\"\n                    direction=\"right\"\n                  >\n                    <Text size=\"medium\" textAlign=\"start\" width=\"100%\">\n                      {' '}\n                      {this.props.ingredient.name}\n                    </Text>\n                  </marquee>\n                </Box>\n              </Box>\n              <Text size=\"medium\">\n                Цена: {this.props.ingredient.price}{' '}\n                {this.props.ingredient.currency}.\n              </Text>\n              <Text size=\"medium\">\n                Вес: {this.props.ingredient.weight}{' '}\n                {this.props.ingredient.measureType}.\n              </Text>\n            </Box>\n            <Box\n              fit=\"content\"\n              align=\"center\"\n              direction=\"column\"\n              justify=\"center\"\n              border={[{ side: 'left' }]}\n              hoverIndicator\n              onClick={this.handleClick}\n            >\n              <AddCircle size=\"medium\" />\n              <Text size=\"small\" textAlign=\"center\">\n                Добавить в рецепт\n              </Text>\n            </Box>\n            {/* <Button icon={<AddCircle size=\"large\" />} fit=\"content\" align=\"center\" justify=\"center\" label=\"Добавить в рецепт\" onClick={handleClick} /> */}\n          </Box>\n        </Box>\n        {/* <div className={\"inside\"}>\n                    <div className={\"icon\"}><i className={\"material-icons\"}>info</i></div>\n                    <div className={\"contents\"}>\n                        информация о товаре\n                        </div>\n                </div> */}\n      </Box>\n    );\n  }\n}\n","/* eslint-disable no-nested-ternary */\nimport React from 'react';\nimport ItemsCarousel from 'react-items-carousel';\nimport IngredientCard from './Card';\nimport { Button, Text, Box } from 'grommet';\nimport { CaretNext, CaretPrevious } from 'grommet-icons';\n\nimport { connect } from 'react-redux';\nimport { parseFetchAC } from '../../../redux/actions/actions';\nimport Preloader from '../../Preloader/preloader';\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfCards: 1,\n      activeItemIndex: 0\n    };\n  }\n  async componentDidMount() {\n    console.log('MOUNTED');\n    try {\n      // const cardWidth = '25vw';\n      // const cardHeight = '22vw';\n      const search = this.props.search;\n      // const data = { search, cardWidth, cardHeight };\n      const data = { search };\n      await this.props.parseFetch(data);\n      const ingredientQuantity = this.props.ingredientsParsed.length;\n      if (ingredientQuantity >= 3) {\n        this.setState({ numberOfCards: 3 });\n      } else {\n        this.setState({ numberOfCards: ingredientQuantity });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async componentDidUpdate(prevProps) {\n    try {\n      // const cardWidth = '25vw';\n      // const cardHeight = '22vw';\n      if (this.props.search !== prevProps.search) {\n        const search = this.props.search;\n        // const data = { search, cardWidth, cardHeight };\n        const data = { search };\n        this.props.parseFetch(data);\n      }\n      if (\n        this.props.ingredientsParsed.length !==\n        prevProps.ingredientsParsed.length\n      ) {\n        let ingredientQuantity = this.props.ingredientsParsed.length;\n        if (ingredientQuantity >= 3) {\n          this.setState({ numberOfCards: 3 });\n        } else {\n          this.setState({ numberOfCards: ingredientQuantity });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const gutter = 12;\n    return this.props.loadingFetch ? (\n      <Box\n        align=\"center\"\n        alignContent=\"center\"\n        alignSelf=\"center\"\n        // basis=\"large\"\n        direction=\"row-responsive\"\n      >\n        <Preloader />\n      </Box>\n    ) : this.props.parseError ? (\n      <Text>К сожалению ничего не найдено, попробуйте другой запрос.</Text>\n    ) : (\n      // `${this.props.cardWidth * this.state.numberOfCards}vw`,\n      <div\n        style={{\n          padding: '0 0',\n          maxWidth: '70vw',\n          margin: '0 auto'\n        }}\n      >\n        <ItemsCarousel\n          infiniteLoop={false}\n          gutter={gutter}\n          activePosition={'center'}\n          chevronWidth={60}\n          disableSwipe={false}\n          alwaysShowChevrons={false}\n          numberOfCards={this.state.numberOfCards}\n          slidesToScroll={1}\n          outsideChevron\n          showSlither={false}\n          firstAndLastGutter={false}\n          activeItemIndex={this.state.activeItemIndex}\n          requestToChangeActive={value =>\n            this.setState({ activeItemIndex: value })\n          }\n          rightChevron={<Button icon={<CaretNext size=\"medium\" />} />}\n          leftChevron={<Button icon={<CaretPrevious size=\"medium\" />} />}\n        >\n          {this.props.ingredientsParsed &&\n            this.props.ingredientsParsed.map(ingredient => (\n              <IngredientCard\n                key={ingredient.id}\n                setSearch={this.props.setSearch}\n                ingredient={ingredient}\n                ingredients={this.props.ingredients}\n                setIngredients={this.props.setIngredients}\n                setCaloriesTotal={this.props.setCaloriesTotal}\n                setPriceTotal={this.props.setPriceTotal}\n                errors={this.props.errors}\n                setError={this.props.setError}\n                // cardHeight={this.props.cardHeight}\n                // cardWidth={this.props.cardWidth}\n                // setOpen={this.props.setOpen}\n                // open={this.props.open}\n              />\n            ))}\n        </ItemsCarousel>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return {\n    loadingFetch: store.loadingFetch,\n    ingredientsParsed: store.ingredientsParsed,\n    // cardWidth: store.cardWidth,\n    // cardHeight: store.cardHeight,\n    parseError: store.parseError\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    parseFetch: data => dispatch(parseFetchAC(data))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Slider);\n","import uuidv1 from 'uuid/v1';\nimport React from 'react';\nimport { TextArea, Box, TextInput, Button, Paragraph } from 'grommet';\nimport { FormClose } from 'grommet-icons';\n\nexport default class Instruction extends React.Component {\n  state = { newID: '' };\n  componentDidMount() {\n    const newID = uuidv1();\n    this.setState({ newID });\n  }\n  render() {\n    const {\n      instruction,\n      instructions,\n      setInstructions,\n      errors,\n      setError,\n      index\n    } = this.props;\n    return (\n      <Box\n        alignSelf=\"center\"\n        direction=\"row\"\n        round=\"small\"\n        // elevation=\"small\"\n        fill={false}\n        flex=\"grow\"\n        margin={{ vertical: '0px' }}\n        width={{ min: '800px', max: '800px' }}\n      >\n        <Box\n          hoverIndicator\n          height=\"50px\"\n          focusIndicator={true}\n          // align=\"center\"\n          direction=\"row\"\n          // gap=\"xsmall\"\n          // pad={{ vertical: '0px', horizontal: '43px' }}\n          margin={{ vertical: '0px', horizontal: '10px' }}\n          // width={{ min: '140px', max: '140px' }}\n          // background=\"accent-1\"\n          round=\"small\"\n        // elevation=\"small\"\n        >\n        <Paragraph\n          // margin={{\n          //   vertical: 'medium',\n          //   horizontal: '...',\n          //   top: 'large',\n          //   bottom: '...',\n          //   left: '...',\n          //   right: '...'\n          // }}\n          className=\"bold\"\n          alignSelf=\"center\"\n          size=\"large\"\n          responsive={true}\n          textAlign=\"center\"\n        >\n          {index + 1}\n        </Paragraph>\n        </Box>\n        <Box\n          hoverIndicator\n          height=\"50px\"\n          width=\"700px\"\n          focusIndicator={true}\n          // align=\"center\"\n          direction=\"row\"\n          // gap=\"xsmall\"\n          // pad={{ vertical: '0px', horizontal: '43px' }}\n          margin={{ vertical: '0px', horizontal: '10px' }}\n          // width={{ min: '140px', max: '140px' }}\n          // background=\"accent-1\"\n          round=\"small\"\n          // elevation=\"small\"\n        >\n          <TextArea\n            className=\"input\"\n            plain={true}\n            fill={true}\n            resize={false}\n            // size=\"medium\"\n            placeholder={`Введите инструкции для шага ${index + 1}`}\n            value={instruction.text}\n            onChange={({ target: { value } }) => {\n              setError({ ...errors, instructions: '' });\n              if (\n                value.length > 3 &&\n                instructions[instructions.length - 1].id != this.state.newID\n              ) {\n                const newInstructions = instructions.map(instr => {\n                  if (instr.id === instruction.id) {\n                    instr.text = value;\n                  }\n                  return instr;\n                });\n                if (newInstructions[newInstructions.length - 1].text !== '') {\n                  newInstructions.push({ id: this.state.newID, text: '' });\n                }\n                setInstructions(newInstructions);\n                console.log(this.state.newID);\n              } else {\n                setInstructions(\n                  instructions.map(instr => {\n                    if (instr.id === instruction.id) {\n                      instr.text = value;\n                    }\n                    return instr;\n                  })\n                );\n              }\n            }}\n          />\n        </Box>\n        {instructions.length > 1 && (\n          <Box\n            // wrap\n            // direction=\"row\"\n            // width=\"small\"\n            // round=\"full\"\n            // margin={{ left: 'xsmall' }}\n            hoverIndicator={false}\n            height=\"50px\"\n            focusIndicator={true}\n            // align=\"center\"\n            direction=\"row\"\n            // gap=\"xsmall\"\n            // pad={{ vertical: '0px', horizontal: '43px' }}\n            margin={{ vertical: '10px', horizontal: '10px' }}\n            // width={{ min: '140px', max: '140px' }}\n            // background=\"accent-1\"\n            round=\"small\"\n        // elevation=\"small\"\n          >\n            <Button\n              href=\"#\"\n              onClick={event => {\n                event.preventDefault();\n                event.stopPropagation();\n                const newInstructions = instructions.filter(\n                  instr => instr.id !== instruction.id\n                );\n                setInstructions(newInstructions);\n              }}\n              onFocus={event => event.stopPropagation()}\n            >\n              <Box\n                background=\"accent-1\"\n                round=\"full\"\n                margin={{ left: 'xsmall' }}\n              >\n                <FormClose\n                  color=\"white\"\n                  size=\"small\"\n                  style={{ width: '25px', height: '25px' }}\n                />\n              </Box>\n            </Button>\n          </Box>\n        )}\n      </Box>\n    );\n  }\n}\n","import React from 'react';\nimport { Box, Button, Text, Paragraph } from 'grommet';\n\nexport default function Submit(props) {\n  return (\n    <Box wrap direction=\"row\" width=\"small\">\n      <Button\n        href=\"#\"\n        onClick={event => {\n          event.preventDefault();\n          event.stopPropagation();\n          props.clickSubmit();\n        }}\n        onFocus={event => event.stopPropagation()}\n      >\n        <Box\n          align=\"center\"\n          direction=\"row\"\n          gap=\"xsmall\"\n          pad={{ vertical: 'xsmall', horizontal: 'small' }}\n          margin=\"xsmall\"\n          background=\"accent-1\"\n          round=\"large\"\n        >\n          <Paragraph\n            className=\"button\"\n            alignSelf=\"center\"\n            textAlign=\"center\"\n            elevation=\"small\"\n          >\n            {props.name}\n          </Paragraph>\n        </Box>\n      </Button>\n    </Box>\n  );\n}\n","import React, { Component } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport \"./uploader.css\";\n\nexport default class Uploader extends Component {\n  state = {\n    imagelink: \"\"\n  };\n\n  send = async acceptedFile => {\n    const link = \"/api/uploads/\";\n    const img = new FormData();\n    img.append(\"file\", acceptedFile[0]);\n\n    const response = await fetch(link, {\n      method: \"POST\",\n      body: img\n    });\n\n    const respJson = await response.json();\n    const path = respJson.path;\n    alert(\"Ваше фото добавлено к рецепту !\");\n    this.props.setImage(\"/api/uploads/\" + path);\n  };\n\n  render() {\n    return (\n      <Dropzone onDrop={acceptedFile => this.send(acceptedFile)}>\n        {({ getRootProps, getInputProps }) => (\n          <section>\n            <div className=\"drop-container\" {...getRootProps()}>\n              <input {...getInputProps()} />\n              <p>Добавьте фото вашего рецепта</p>\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    );\n  }\n}\n","import uuidv1 from 'uuid/v1';\nimport React, { useState } from 'react';\nimport { Box, TextInput, Select, Text, Paragraph } from 'grommet';\nimport { NumberInput } from 'grommet-controls';\nimport { Redirect } from 'react-router-dom';\nimport Category from './Category';\nimport Ingredients from './Ingredients';\nimport Search from './Search';\nimport Slider from './Slider/Slider';\nimport Instruction from './Instruction';\nimport Submit from './Submit';\nimport Uploader from '../Uploader/uploader';\nimport './recipeForm.css';\n\nconst hrs = [\n  '0',\n  '1',\n  '2',\n  '3',\n  '4',\n  '5',\n  '6',\n  '7',\n  '8',\n  '9',\n  '10',\n  '11',\n  '12'\n];\nconst mins = [\n  '0',\n  '5',\n  '10',\n  '15',\n  '20',\n  '25',\n  '30',\n  '35',\n  '40',\n  '45',\n  '50',\n  '55'\n];\n\nexport default function RecipeForm(props) {\n  const [name, setName] = useState('');\n  const [hours, setHours] = useState('0');\n  const [minutes, setMinutes] = useState('0');\n  const [portions, setPortions] = useState(1);\n  const [category, setCategory] = useState('');\n  const [priceTotal, setPriceTotal] = useState('');\n  const [caloriesTotal, setCaloriesTotal] = useState('');\n  const [search, setSearch] = useState('');\n  const [ingredients, setIngredients] = useState([]);\n  const [instructions, setInstructions] = useState([\n    { id: uuidv1(), text: '' }\n  ]);\n  const [id, setId] = useState('');\n  const [image, setImage] = useState('');\n  const [errors, setError] = useState({\n    name: '',\n    image: '',\n    ingredients: '',\n    instructions: '',\n    category: ''\n  });\n  const [portionsSuffix, setSuffix] = useState(' порция');\n  const clickSubmit = async () => {\n    // debugger;\n    if (\n      !name ||\n      !image ||\n      ingredients.length === 0 ||\n      instructions[0].text === '' ||\n      !category\n    ) {\n      const newErrors = {};\n      if (!name) {\n        newErrors.name = 'Пожалуйста, введите название рецепта';\n      }\n      if (!image) {\n        newErrors.image = 'Пожалуйста, добавьте фото рецепта';\n      }\n      if (!category) {\n        newErrors.category = 'Пожалуйста, укажите категорию рецепта';\n      }\n      if (ingredients.length === 0) {\n        newErrors.ingredients = 'Пожалуйста, добавьте ингредиенты';\n      }\n      if (instructions[0].text === '') {\n        newErrors.instructions =\n          'Пожалуйста, заполните инструкции по приготовлению';\n      }\n      setError(newErrors);\n    } else {\n      try {\n        let instructionsTrimmed = instructions;\n        if (instructions[instructions.length - 1].text === '') {\n          instructionsTrimmed = instructions.slice(0, instructions.length - 1);\n        }\n        const response = await fetch('/api/recipes/', {\n          method: 'POST',\n          headers: { 'Content-type': 'application/json' },\n          body: JSON.stringify({\n            name,\n            hours,\n            minutes,\n            image,\n            portions,\n            ingredients,\n            instructions: instructionsTrimmed,\n            category,\n            priceTotal,\n            caloriesTotal,\n            portionsSuffix\n          }),\n          credentials: 'include'\n        });\n        if (response.status === 200) {\n          const { recipeId } = await response.json();\n          setId(recipeId);\n        } else {\n          setError({ ...errors, server: `ERROR: ${response.status}` });\n        }\n      } catch (error) {\n        setError({ ...errors, server: error });\n      }\n    }\n  };\n\n  if (id) {\n    return <Redirect to={`/recipes/${id}`} />;\n  }\n  return (\n    <Box\n      justify=\"between\"\n      alignContent=\"stretch\"\n      margin=\"medium\"\n      gap=\"medium\"\n      pad=\"medium\"\n      fill=\"vertical\"\n      direction=\"column\"\n      elevation=\"medium\"\n      width=\"80%\"\n      height=\"medium\"\n    >\n      <Paragraph\n        margin={{\n          vertical: 'medium',\n          horizontal: '...',\n          top: 'large',\n          bottom: '...',\n          left: '...',\n          right: '...'\n        }}\n        className=\"bold\"\n        alignSelf=\"center\"\n        size=\"small\"\n        responsive={true}\n        textAlign=\"center\"\n      >\n        НОВЫЙ РЕЦЕПТ\n      </Paragraph>\n      <Box\n        align=\"center\"\n        alignContent=\"center\"\n        alignSelf=\"center\"\n        // basis=\"large\"\n        border=\"bottom\"\n        direction=\"row-responsive\"\n      >\n        <TextInput\n          plain={true}\n          placeholder=\"    Название рецепта\"\n          value={name}\n          className=\"ingredient-name\"\n          onChange={event => {\n            setError({ ...errors, name: '' });\n            setName(event.target.value);\n          }}\n        />\n        {errors.name && (\n          <Paragraph\n            margin={{\n              vertical: 'medium',\n              horizontal: '...',\n              top: 'large',\n              bottom: '...',\n              left: '...',\n              right: '...'\n            }}\n            className=\"bold\"\n            alignSelf=\"center\"\n            size=\"small\"\n            responsive={true}\n            textAlign=\"center\"\n            color=\"red\"\n          >\n            {errors.name}\n          </Paragraph>\n        )}\n      </Box>\n      <Paragraph\n        margin={{\n          vertical: 'medium',\n          horizontal: '...',\n          top: 'large',\n          bottom: '...',\n          left: '...',\n          right: '...'\n        }}\n        className=\"bold\"\n        alignSelf=\"center\"\n        size=\"small\"\n        responsive={true}\n        textAlign=\"center\"\n      >\n        КОЛИЧЕСТВО ПОРЦИЙ\n      </Paragraph>\n      <Box\n        round=\"small\"\n        align=\"center\"\n        alignContent=\"center\"\n        alignSelf=\"center\"\n        // basis=\"large\"\n        // border=\"bottom\"\n        direction=\"row-responsive\"\n        elevation=\"small\"\n        fill={false}\n        flex={false}\n        width={{ min: '220px', max: '220px' }}\n      >\n        <NumberInput\n          min={1}\n          max={12}\n          value={portions}\n          suffix={portionsSuffix}\n          onChange={({ target: { value } }) => {\n            if (parseFloat(value) === 1) {\n              setSuffix(' порция');\n            } else if (parseFloat(value) > 4) {\n              setSuffix(' порций');\n            } else {\n              setSuffix(' порции');\n            }\n            setPortions(value);\n          }}\n        />\n      </Box>\n      <Paragraph\n        margin={{\n          vertical: 'medium',\n          horizontal: '...',\n          top: 'large',\n          bottom: '...',\n          left: '...',\n          right: '...'\n        }}\n        className=\"bold\"\n        alignSelf=\"center\"\n        size=\"small\"\n        responsive={true}\n        textAlign=\"center\"\n      >\n        ИНГРЕДИЕНТЫ\n      </Paragraph>\n      {ingredients.length > 0 && (\n        <Ingredients\n          ingredients={ingredients}\n          setIngredients={setIngredients}\n          setPriceTotal={setPriceTotal}\n          setCaloriesTotal={setCaloriesTotal}\n        />\n      )}\n      <Search setSearch={setSearch} />\n      {search && (\n        <Slider\n          search={search}\n          setSearch={setSearch}\n          ingredients={ingredients}\n          setIngredients={setIngredients}\n          setCaloriesTotal={setCaloriesTotal}\n          setPriceTotal={setPriceTotal}\n          errors={errors}\n          setError={setError}\n        />\n      )}\n      {errors.ingredients && (\n        <Text size=\"medium\" color=\"red\">\n          {errors.ingredients}\n        </Text>\n      )}\n      <Paragraph\n        margin={{\n          vertical: 'medium',\n          horizontal: '...',\n          top: 'large',\n          bottom: '...',\n          left: '...',\n          right: '...'\n        }}\n        className=\"bold\"\n        alignSelf=\"center\"\n        size=\"small\"\n        responsive={true}\n        textAlign=\"center\"\n      >\n        ИНСТРУКЦИИ\n      </Paragraph>\n      {instructions &&\n        instructions.map((instruction, index) => (\n          <Box\n            // align=\"center\"\n            // alignContent=\"center\"\n            alignSelf=\"center\"\n            direction=\"row-responsive\"\n            key={instruction.id}\n          >\n            <Instruction\n              instruction={instruction}\n              instructions={instructions}\n              setInstructions={setInstructions}\n              errors={errors}\n              setError={setError}\n              index={index}\n            />\n          </Box>\n        ))}\n      {errors.instructions && (\n        <Text size=\"medium\" color=\"red\">\n          {errors.instructions}\n        </Text>\n      )}\n      <Box\n        alignSelf=\"center\"\n        alignContent=\"center\"\n        direction=\"row\"\n        round=\"small\"\n        // elevation=\"small\"\n        fill={false}\n        flex=\"grow\"\n        margin={{ vertical: '0px' }}\n        width={{ min: '800px', max: '800px' }}\n      >\n        <Box\n          alignSelf=\"left\"\n          alignContent=\"top\"\n          direction=\"column\"\n          round=\"small\"\n          // elevation=\"small\"\n          fill={false}\n          flex=\"grow\"\n          margin={{ vertical: '0px' }}\n          // width={{ min: '800px', max: '800px' }}\n        >\n          <Paragraph\n            margin={{\n              vertical: 'medium',\n              horizontal: '...',\n              top: 'large',\n              bottom: '...',\n              left: '...',\n              right: '...'\n            }}\n            className=\"bold\"\n            alignSelf=\"left\"\n            size=\"small\"\n            responsive={true}\n            textAlign=\"left\"\n          >\n            КАТЕГОРИЯ\n          </Paragraph>\n          <Category\n            category={category}\n            setCategory={setCategory}\n            errors={errors}\n            setError={setError}\n          />\n          {errors.category && (\n            <Text size=\"medium\" color=\"red\">\n              {errors.category}\n            </Text>\n          )}\n        </Box>\n        <Box\n          alignSelf=\"right\"\n          direction=\"column\"\n          round=\"small\"\n          // elevation=\"small\"\n          fill={false}\n          flex=\"grow\"\n          margin={{ vertical: '0px' }}\n          // width={{ min: '800px', max: '800px' }}\n        >\n          <Paragraph\n            margin={{\n              vertical: 'medium',\n              horizontal: '...',\n              top: 'large',\n              bottom: '...',\n              left: '...',\n              right: '...'\n            }}\n            className=\"bold\"\n            alignSelf=\"left\"\n            size=\"small\"\n            responsive={true}\n            textAlign=\"left\"\n          >\n            ВРЕМЯ ПРИГОТОВЛЕНИЯ\n          </Paragraph>\n          <Select\n            id=\"hours\"\n            name=\"hours\"\n            placeholder=\"часов\"\n            dropHeight=\"small\"\n            options={hrs}\n            value={hours}\n            onChange={({ option }) => setHours(option)}\n          />\n          <Paragraph\n            className=\"bold\"\n            alignSelf=\"left\"\n            size=\"small\"\n            responsive={true}\n            textAlign=\"left\"\n          >\n            ч.\n          </Paragraph>\n          <Select\n            id=\"minutes\"\n            name=\"minutes\"\n            placeholder=\"минут\"\n            dropHeight=\"small\"\n            options={mins}\n            value={minutes}\n            onChange={({ option }) => setMinutes(option)}\n          />\n          <Paragraph\n            className=\"bold\"\n            alignSelf=\"left\"\n            size=\"small\"\n            responsive={true}\n            textAlign=\"left\"\n          >\n            мин.\n          </Paragraph>\n        </Box>\n      </Box>\n      <Box\n        alignSelf=\"center\"\n        alignContent=\"center\"\n        direction=\"row\"\n        round=\"small\"\n        // elevation=\"small\"\n        fill={false}\n        flex=\"grow\"\n        width=\"400px\"\n        margin={{\n          \"left\": \"55px\"\n        }}\n\n      >\n      <Uploader setImage={setImage} />\n      {errors.image && (\n        <Text size=\"medium\" color=\"red\">\n          {errors.image}\n        </Text>\n      )}\n      </Box>\n      <Box\n        alignSelf=\"center\"\n        alignContent=\"center\"\n        direction=\"row\"\n        round=\"small\"\n        // elevation=\"small\"\n        fill={false}\n        flex=\"grow\"\n        margin={{ vertical: '0px' }}\n      >\n        <Submit name=\"СОЗДАТЬ РЕЦЕПТ\" clickSubmit={clickSubmit} />\n        {errors.server && (\n          <Text size=\"medium\" color=\"red\">\n            {errors.server}\n          </Text>\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { Anchor } from 'grommet';\nimport React from 'react';\nimport './Ingredients.css';\n\nexport default class IngredientsListTable extends React.Component {\n  render() {\n    const { ingredients, portions, defaultPortions } = this.props;\n\n    const ratio = portions / defaultPortions;\n    // иметь ввиду что тут не мняется quantity ингредиента,\n    // рендерим корректно но не меняя свойство каждого ингредиента\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th />\n            <th>Вес</th>\n            <th>Ккал</th>\n            <th>Цена</th>\n            <th>Шт</th>\n          </tr>\n        </thead>\n        <tbody>\n          {ingredients.map(ingredient => (\n            <tr key={ingredient.id} className=\"testText \">\n              <td className=\"paddingTd\">\n                <Anchor\n                  label={ingredient.name}\n                  href={ingredient.link}\n                  target=\"_blank\"\n                />\n              </td>\n              <td className=\"centered \">\n                {Math.round(ingredient.inputWeight * ratio)}\n              </td>\n              <td className=\"centered\">\n                {Math.round(\n                  (ingredient.calories * ingredient.inputWeight * ratio) / 100,\n                )}\n              </td>\n              <td className=\"centered\">\n                {Math.ceil(\n                  (ingredient.inputWeight * ratio) / ingredient.weight,\n                ) * ingredient.price}\n              </td>\n              <td className=\"centered\">\n                {Math.ceil(\n                  (ingredient.inputWeight * ratio) / ingredient.weight,\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { Box, Meter, Stack, Text } from 'grommet';\nimport './Ingredients.css';\n\nexport default class LabelledMeter extends Component {\n  render() {\n    const { meterValue, meterType } = this.props;\n\n    return (\n      <Box align=\"start\">\n        <Stack anchor=\"center\">\n          <Meter\n            type=\"circle\"\n            background=\"light-2\"\n            values={[{ value: meterValue }]}\n            size=\"xsmall\"\n            thickness=\"small\"\n          />\n          <Box direction=\"column\" align=\"center\" pad={{ bottom: 'small' }}>\n            <Text size=\"large\" weight=\"bold\">\n              {meterValue}\n            </Text>\n            <Text className=\"testText\" size=\"small\">\n              {meterType}\n            </Text>\n          </Box>\n        </Stack>\n      </Box>\n    );\n  }\n}\n","import {\n  Box,\n  Image,\n  Heading,\n  Anchor,\n} from 'grommet';\nimport { NumberInput } from 'grommet-controls';\nimport React, { Component } from 'react';\nimport IngredientsListTable from './IngredientsListTable';\nimport LabelledMeter from './Meter';\nimport './Ingredients.css';\n\n\nexport default class RecipePage extends Component {\n  state = {\n    defaultPortions: 0,\n    portions: 0,\n    ingredients: [],\n    priceTotal: 0,\n    caloriesTotal: 0,\n    name: '',\n    image: '',\n    instructions: [],\n    hours: '',\n    minutes: '',\n    portionCaption: 'порции'\n  };\n\n  async componentDidMount() {\n    window.scrollTo(0, 0);\n    const { id } = this.props.match.params;\n    const response = await fetch(`/api/recipes/${id}`);\n    const respJson = await response.json();\n    const {\n      portions,\n      ingredients,\n      priceTotal,\n      caloriesTotal,\n      name,\n      image,\n      instructions,\n      hours,\n      minutes,\n      authorName,\n      category,\n      author\n    } = respJson.recipe;\n\n    this.setState(() => ({\n      defaultPortions: portions,\n      portions,\n      ingredients,\n      priceTotal: Math.round(priceTotal),\n      caloriesTotal: Math.round(caloriesTotal),\n      name,\n      image,\n      hours,\n      minutes,\n      authorName,\n      category,\n      author,\n      instructions \n    }));\n  }\n\n  countTotalCalories() {\n    let ratio = this.state.portions / this.state.defaultPortions;\n    let totalCalories = 0;\n    this.state.ingredients.map(ingredient => {\n      totalCalories +=\n        (ingredient.calories * ingredient.inputWeight * ratio) / 100;\n    });\n    return Math.round(totalCalories);\n  }\n\n  countTotalPrice() {\n    let ratio = this.state.portions / this.state.defaultPortions;\n    let totalPrice = 0;\n    this.state.ingredients.map(ingredient => {\n      let quantity = Math.ceil(\n        (ingredient.inputWeight * ratio) / ingredient.weight\n      );\n\n      totalPrice += ingredient.price * quantity;\n    });\n    return Math.round(totalPrice);\n  }\n\n  async setPortions(value) {\n    await this.setState(() => ({ portions: value }));\n\n    this.setState(() => ({ caloriesTotal: this.countTotalCalories() }));\n    this.setState(() => ({ priceTotal: this.countTotalPrice() }));\n\n    if (parseFloat(value) === 1) {\n      this.setState(() => ({ portionCaption: 'порция' }));\n    } else if (parseFloat(value) > 4) {\n      this.setState(() => ({ portionCaption: 'порций' }));\n    } else {\n      this.setState(() => ({ portionCaption: 'порции' }));\n    }\n  }\n\n  render() {\n    return (\n      <Box elevation=\"medium\" direction=\"column\" width=\"80%\" gap=\"medium\">\n        <Box\n          align=\"center\"\n          direction=\"column\"\n          animation=\"fadeIn\"\n          width=\"100%\"\n        >\n          <Anchor\n            className=\"testText\"\n            margin={{\n              top: 'small'\n            }}\n            alignSelf=\"center\"\n            label={this.state.category}\n            href=\"/recipes\"\n            textAlign=\"center\"\n          />\n\n          <Heading\n            className=\"headerStyle\"\n            margin={{\n              bottom: 'small',\n              top: 'medium'\n            }}\n            alignSelf=\"center\"\n            level={1}\n            textAlign=\"center\"\n          >\n            {this.state.name}\n          </Heading>\n\n          <Heading\n            className=\"author\"\n            textAlign=\"center\"\n            alignSelf=\"center\"\n            margin={{\n              bottom: 'none'\n            }}\n            level={4}\n          >\n            Автор: {this.state.authorName}\n          </Heading>\n        </Box>\n\n        <Box\n          width=\"100%\"\n          height=\"500px\"\n          elevation=\"medium\"\n          alignSelf=\"center\"\n          animation=\"fadeIn\"\n        >\n          <Image\n            fit=\"cover\"\n            height=\"100%\"\n            width=\"100%\"\n            elevation=\"medium\"\n            fill={true}\n            src={this.state.image}\n          />\n        </Box>\n\n        <Box\n          className=\"testText\"\n          width=\"80%\"\n          justify=\"between\"\n          animation=\"fadeIn\"\n          alignSelf=\"center\"\n          direction=\"row\"\n        >\n          <LabelledMeter\n            infoRecipe\n            meterValue={parseFloat(this.state.caloriesTotal)}\n            meterType={'Ккал'}\n          />\n          <LabelledMeter\n            meterValue={\n              parseFloat(this.state.hours) * 60 + parseFloat(this.state.minutes)\n            }\n            meterType={'Минут'}\n          />\n          <LabelledMeter\n            meterValue={parseFloat(this.state.priceTotal)}\n            meterType={'Рублей'}\n          />\n        </Box>\n        <Box\n          width=\"100%\"\n          direction=\"row\"\n          animation=\"fadeIn\"\n          align=\"center\"\n          justify=\"between\"\n        >\n          <Box\n            className=\"testText\"\n            direction=\"row\"\n            justify=\"start\"\n            margin={{\n              left: 'large'\n            }}\n          >\n            <Heading\n              margin={{\n                left: 'small',\n                top: 'small',\n                bottom: 'small'\n              }}\n              level={3}\n            >\n              ИНГРЕДИЕНТЫ:\n            </Heading>\n          </Box>\n          <Box\n            margin={{\n              right: 'large'\n            }}\n            align=\"center\"\n            justify=\"between\"\n            direction=\"row\"\n            height=\"100%\"\n            justify=\"end\"\n            width=\"200px\"\n          >\n            <NumberInput\n              className=\"testText\"\n              min={1}\n              max={12}\n              value={this.state.portions}\n              suffix={`  ${this.state.portionCaption}`}\n              onChange={({ target: { value } }) => {\n                this.setPortions(value);\n              }}\n            />\n          </Box>\n        </Box>\n        <Box\n          className=\"testText\"\n          elevation=\"xsmall\"\n          width=\"100\"\n          animation=\"fadeIn\"\n          margin={{\n            left: 'large',\n            right: 'large'\n          }}\n        >\n          <IngredientsListTable\n            defaultPortions={parseFloat(this.state.defaultPortions)}\n            portions={parseFloat(this.state.portions)}\n            ingredients={this.state.ingredients}\n          />\n        </Box>\n\n        <Box\n          className=\"testText\"\n          width=\"100\"\n          animation=\"fadeIn\"\n          margin={{\n            left: 'large',\n            right: 'large'\n          }}\n        >\n          <Heading\n            margin={{\n              top: 'small'\n            }}\n            level={3}\n          >\n            ИНСТРУКЦИИ:\n          </Heading>\n          <ul className=\"list4a\">\n            {this.state.instructions.map((ingredient, index) => (\n              <>\n                <li className=\"testText\" key={ingredient.id}>\n                  {ingredient.text}\n                </li>\n              </>\n            ))}\n          </ul>\n        </Box>\n      </Box>\n    );\n  }\n}\n","import uuidv1 from 'uuid/v1';\nimport React, { Component } from 'react';\nimport { Box, TextInput, Select, Text, Paragraph } from 'grommet';\nimport { NumberInput } from 'grommet-controls';\nimport { Redirect } from 'react-router-dom';\nimport Category from './Category';\nimport Ingredients from './Ingredients';\nimport Search from './Search';\nimport Slider from './Slider/Slider';\nimport Instruction from './Instruction';\nimport Submit from './Submit';\nimport Uploader from '../Uploader/uploader';\nimport './recipeForm.css';\n\nexport default class RecipeEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      name: '',\n      hours: '0',\n      minutes: '0',\n      image: '',\n      portions: '',\n      portionsSuffix: ' порция',\n      category: '',\n      priceTotal: '',\n      caloriesTotal: '',\n      search: '',\n      ingredients: [],\n      instructions: [],\n      errors: [],\n      reload: false\n    };\n    this.clickSubmit = this.clickSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const response = await fetch(`/api/recipes/${id}`);\n    const result = await response.json();\n    const {\n      _id,\n      name,\n      hours,\n      minutes,\n      portions,\n      portionsSuffix,\n      category,\n      priceTotal,\n      caloriesTotal,\n      ingredients,\n      instructions,\n      image\n    } = result.recipe;\n    const newInstructions = instructions.concat([{ id: uuidv1(), text: '' }]);\n    this.setState(() => ({\n      id: _id,\n      name,\n      hours,\n      minutes,\n      portions,\n      portionsSuffix,\n      category,\n      priceTotal,\n      caloriesTotal,\n      ingredients,\n      instructions: newInstructions,\n      image\n    }));\n  }\n\n  async clickSubmit() {\n    const {\n      name,\n      image,\n      ingredients,\n      instructions,\n      category,\n      errors\n    } = this.state;\n    if (\n      !name ||\n      !image ||\n      ingredients.length === 0 ||\n      instructions[0].text === '' ||\n      !category\n    ) {\n      const newErrors = {};\n      if (!name) {\n        newErrors.name = 'Пожалуйста, введите название рецепта';\n      }\n      if (!image) {\n        newErrors.image = 'Пожалуйста, добавьте фото рецепта';\n      }\n      if (!category) {\n        newErrors.category = 'Пожалуйста, укажите категорию рецепта';\n      }\n      if (ingredients.length === 0) {\n        newErrors.ingredients = 'Пожалуйста, добавьте ингредиенты';\n      }\n      if (instructions[0].text === '') {\n        newErrors.instructions =\n          'Пожалуйста, заполните инструкции по приготовлению';\n      }\n      this.setState(prevState => ({\n        ...prevState,\n        errors: newErrors\n      }));\n    } else {\n      try {\n        const {\n          id,\n          name,\n          hours,\n          minutes,\n          image,\n          portions,\n          ingredients,\n          instructions,\n          category,\n          priceTotal,\n          caloriesTotal,\n          portionsSuffix\n        } = this.state;\n        let instructionsTrimmed = instructions;\n        if (instructions[instructions.length - 1].text === '') {\n          instructionsTrimmed = instructions.slice(0, instructions.length - 1);\n        }\n        const response = await fetch(\n          `/api/recipes/${id}`,\n          {\n            method: 'PUT',\n            headers: { 'Content-type': 'application/json' },\n            body: JSON.stringify({\n              name,\n              hours,\n              minutes,\n              image,\n              portions,\n              ingredients,\n              instructions: instructionsTrimmed,\n              category,\n              priceTotal,\n              caloriesTotal,\n              portionsSuffix\n            }),\n            credentials: 'include'\n          }\n        );\n        if (response.status === 200) {\n          this.setState(() => ({ reload: true }));\n        } else {\n          this.setState(prevState => ({\n            ...prevState,\n            errors: { ...errors, server: `ERROR: ${response.status}` }\n          }));\n        }\n      } catch (error) {\n        this.setState(prevState => ({\n          ...prevState,\n          errors: { ...prevState.errors, server: error }\n        }));\n      }\n    }\n  }\n\n  render() {\n    const hrs = [\n      '0',\n      '1',\n      '2',\n      '3',\n      '4',\n      '5',\n      '6',\n      '7',\n      '8',\n      '9',\n      '10',\n      '11',\n      '12'\n    ];\n    const mins = [\n      '0',\n      '5',\n      '10',\n      '15',\n      '20',\n      '25',\n      '30',\n      '35',\n      '40',\n      '45',\n      '50',\n      '55'\n    ];\n    const {\n      id,\n      reload,\n      name,\n      errors,\n      portions,\n      portionsSuffix,\n      ingredients,\n      instructions,\n      search,\n      category,\n      hours,\n      minutes\n    } = this.state;\n\n    if (reload) {\n      return <Redirect to={`/recipes/${id}`} />;\n    }\n    return (\n      <Box\n        justify=\"between\"\n        alignContent=\"stretch\"\n        margin=\"medium\"\n        gap=\"medium\"\n        pad=\"medium\"\n        fill=\"vertical\"\n        direction=\"column\"\n        elevation=\"medium\"\n        width=\"80%\"\n        height=\"medium\"\n      >\n        <Paragraph\n          margin={{\n            vertical: 'medium',\n            horizontal: '...',\n            top: 'large',\n            bottom: '...',\n            left: '...',\n            right: '...'\n          }}\n          className=\"bold\"\n          alignSelf=\"center\"\n          size=\"small\"\n          responsive={true}\n          textAlign=\"center\"\n        >\n          НОВЫЙ РЕЦЕПТ\n        </Paragraph>\n        <Box\n          align=\"center\"\n          alignContent=\"center\"\n          alignSelf=\"center\"\n          // basis=\"large\"\n          border=\"bottom\"\n          direction=\"row-responsive\"\n        >\n          <TextInput\n            plain={true}\n            placeholder=\"    Название рецепта\"\n            value={name}\n            className=\"ingredient-name\"\n            onChange={event => {\n              const { value } = event.target;\n              this.setState(prevState => ({\n                name: value,\n                errors: { ...prevState.errors, name: '' }\n              }));\n            }}\n          />\n          {errors.name && (\n            <Paragraph\n              margin={{\n                vertical: 'medium',\n                horizontal: '...',\n                top: 'large',\n                bottom: '...',\n                left: '...',\n                right: '...'\n              }}\n              className=\"bold\"\n              alignSelf=\"center\"\n              size=\"small\"\n              responsive={true}\n              textAlign=\"center\"\n              color=\"red\"\n            >\n              {errors.name}\n            </Paragraph>\n          )}\n        </Box>\n        <Paragraph\n          margin={{\n            vertical: 'medium',\n            horizontal: '...',\n            top: 'large',\n            bottom: '...',\n            left: '...',\n            right: '...'\n          }}\n          className=\"bold\"\n          alignSelf=\"center\"\n          size=\"small\"\n          responsive={true}\n          textAlign=\"center\"\n        >\n          КОЛИЧЕСТВО ПОРЦИЙ\n        </Paragraph>\n        <Box\n          round=\"small\"\n          align=\"center\"\n          alignContent=\"center\"\n          alignSelf=\"center\"\n          // basis=\"large\"\n          // border=\"bottom\"\n          direction=\"row-responsive\"\n          elevation=\"small\"\n          fill={false}\n          flex={false}\n          width={{ min: '220px', max: '220px' }}\n        >\n          <NumberInput\n            min={1}\n            max={12}\n            value={portions}\n            suffix={portionsSuffix}\n            onChange={({ target: { value } }) => {\n              if (parseFloat(value) === 1) {\n                this.setState(prevState => ({\n                  ...prevState,\n                  portionsSuffix: ' порция'\n                }));\n              } else if (parseFloat(value) > 4) {\n                this.setState(prevState => ({\n                  ...prevState,\n                  portionsSuffix: ' порций'\n                }));\n              } else {\n                this.setState(prevState => ({\n                  ...prevState,\n                  portionsSuffix: ' порции'\n                }));\n              }\n              this.setState(() => ({\n                portions: value\n              }));\n            }}\n          />\n        </Box>\n        <Paragraph\n          margin={{\n            vertical: 'medium',\n            horizontal: '...',\n            top: 'large',\n            bottom: '...',\n            left: '...',\n            right: '...'\n          }}\n          className=\"bold\"\n          alignSelf=\"center\"\n          size=\"small\"\n          responsive={true}\n          textAlign=\"center\"\n        >\n          ИНГРЕДИЕНТЫ\n        </Paragraph>\n        {ingredients && (\n          <Ingredients\n            ingredients={ingredients}\n            setIngredients={args => {\n              this.setState(prevState => ({\n                ...prevState,\n                ingredients: args\n              }));\n            }}\n            setPriceTotal={args => {\n              this.setState(prevState => ({\n                ...prevState,\n                priceTotal: args\n              }));\n            }}\n            setCaloriesTotal={args => {\n              this.setState(prevState => ({\n                ...prevState,\n                caloriesTotal: args\n              }));\n            }}\n          />\n        )}\n        <Search\n          setSearch={args => {\n            this.setState(prevState => ({\n              ...prevState,\n              search: args\n            }));\n          }}\n        />\n        {search && (\n          <Slider\n            search={search}\n            setSearch={args => {\n              this.setState(prevState => ({\n                ...prevState,\n                search: args\n              }));\n            }}\n            ingredients={ingredients}\n            setIngredients={args => {\n              this.setState(prevState => ({\n                ...prevState,\n                ingredients: args\n              }));\n            }}\n            setCaloriesTotal={args => {\n              this.setState(prevState => ({\n                ...prevState,\n                caloriesTotal: args\n              }));\n            }}\n            setPriceTotal={args => {\n              this.setState(prevState => ({\n                ...prevState,\n                priceTotal: args\n              }));\n            }}\n            errors={errors}\n            setError={args => {\n              this.setState(prevState => ({\n                ...prevState,\n                errors: args\n              }));\n            }}\n          />\n        )}\n        {errors.ingredients && (\n          <Text size=\"medium\" color=\"red\">\n            {errors.ingredients}\n          </Text>\n        )}\n        <Paragraph\n          margin={{\n            vertical: 'medium',\n            horizontal: '...',\n            top: 'large',\n            bottom: '...',\n            left: '...',\n            right: '...'\n          }}\n          className=\"bold\"\n          alignSelf=\"center\"\n          size=\"small\"\n          responsive={true}\n          textAlign=\"center\"\n        >\n          ИНСТРУКЦИИ\n        </Paragraph>\n        {instructions &&\n          instructions.map((instruction, index) => (\n            <Box\n              // align=\"center\"\n              // alignContent=\"center\"\n              alignSelf=\"center\"\n              direction=\"row-responsive\"\n              key={instruction.id}\n            >\n              <Instruction\n                instruction={instruction}\n                instructions={instructions}\n                setInstructions={args => {\n                  this.setState(prevState => ({\n                    ...prevState,\n                    instructions: args\n                  }));\n                }}\n                errors={errors}\n                setError={args => {\n                  this.setState(prevState => ({\n                    ...prevState,\n                    errors: args\n                  }));\n                }}\n                index={index}\n              />\n            </Box>\n          ))}\n        {errors.instructions && (\n          <Text size=\"medium\" color=\"red\">\n            {errors.instructions}\n          </Text>\n        )}\n        <Box\n          alignSelf=\"center\"\n          alignContent=\"center\"\n          direction=\"row\"\n          round=\"small\"\n          // elevation=\"small\"\n          fill={false}\n          flex=\"grow\"\n          margin={{ vertical: '0px' }}\n          width={{ min: '800px', max: '800px' }}\n        >\n          <Box\n            alignSelf=\"left\"\n            alignContent=\"top\"\n            direction=\"column\"\n            round=\"small\"\n            // elevation=\"small\"\n            fill={false}\n            flex=\"grow\"\n            margin={{ vertical: '0px' }}\n            // width={{ min: '800px', max: '800px' }}\n          >\n            <Paragraph\n              margin={{\n                vertical: 'medium',\n                horizontal: '...',\n                top: 'large',\n                bottom: '...',\n                left: '...',\n                right: '...'\n              }}\n              className=\"bold\"\n              alignSelf=\"left\"\n              size=\"small\"\n              responsive={true}\n              textAlign=\"left\"\n            >\n              КАТЕГОРИЯ\n            </Paragraph>\n            <Category\n              category={category}\n              setCategory={args => {\n                this.setState(prevState => ({\n                  ...prevState,\n                  category: args\n                }));\n              }}\n              errors={errors}\n              setError={args => {\n                this.setState(prevState => ({\n                  ...prevState,\n                  errors: args\n                }));\n              }}\n            />\n            {errors.category && (\n              <Text size=\"medium\" color=\"red\">\n                {errors.category}\n              </Text>\n            )}\n          </Box>\n          <Box\n            alignSelf=\"right\"\n            direction=\"column\"\n            round=\"small\"\n            // elevation=\"small\"\n            fill={false}\n            flex=\"grow\"\n            margin={{ vertical: '0px' }}\n            // width={{ min: '800px', max: '800px' }}\n          >\n            <Paragraph\n              margin={{\n                vertical: 'medium',\n                horizontal: '...',\n                top: 'large',\n                bottom: '...',\n                left: '...',\n                right: '...'\n              }}\n              className=\"bold\"\n              alignSelf=\"left\"\n              size=\"small\"\n              responsive={true}\n              textAlign=\"left\"\n            >\n              ВРЕМЯ ПРИГОТОВЛЕНИЯ\n            </Paragraph>\n            <Select\n              id=\"hours\"\n              name=\"hours\"\n              placeholder=\"часов\"\n              dropHeight=\"small\"\n              options={hrs}\n              value={hours}\n              onChange={({ option }) => {\n                this.setState({ hours: option });\n              }}\n            />\n            <Paragraph\n              className=\"bold\"\n              alignSelf=\"left\"\n              size=\"small\"\n              responsive={true}\n              textAlign=\"left\"\n            >\n              ч.\n            </Paragraph>\n            <Select\n              id=\"minutes\"\n              name=\"minutes\"\n              placeholder=\"минут\"\n              dropHeight=\"small\"\n              options={mins}\n              value={minutes}\n              onChange={({ option }) => this.setState({ minutes: option })}\n            />\n            <Paragraph\n              className=\"bold\"\n              alignSelf=\"left\"\n              size=\"small\"\n              responsive={true}\n              textAlign=\"left\"\n            >\n              мин.\n            </Paragraph>\n          </Box>\n        </Box>\n        <Uploader\n          setImage={args => {\n            this.setState(prevState => ({\n              ...prevState,\n              image: args\n            }));\n          }}\n        />\n        {errors.image && (\n          <Text size=\"medium\" color=\"red\">\n            {errors.image}\n          </Text>\n        )}\n        <Box\n          alignSelf=\"center\"\n          alignContent=\"center\"\n          direction=\"row\"\n          round=\"small\"\n          // elevation=\"small\"\n          fill={false}\n          flex=\"grow\"\n          margin={{ vertical: '0px' }}\n        >\n          <Submit name=\"ИЗМЕНИТЬ РЕЦЕПТ\" clickSubmit={this.clickSubmit} />\n          {errors.server && (\n            <Text size=\"medium\" color=\"red\">\n              {errors.server}\n            </Text>\n          )}\n        </Box>\n      </Box>\n    );\n  }\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { isLoggedFetchAC } from '../../redux/actions/actions';\n\nclass PrivateRoute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      loading: true,\n    };\n  }\n\n  async componentDidMount() {\n    // проверка авторизации\n    this.props.isLoggedFetch();\n  }\n\n  render() {\n    const component = this.props.component;\n    return (\n      <Route\n        {...this.props}\n        render={props =>\n          (this.props.isLoggedIn\n            ? (<component {...props} />)\n            : this.props.loadingFetch\n              ? (<span className={'statustext'}>loading</span>)\n              : (<Redirect to=\"/login\" />)\n          )\n        }\n      />\n    );\n  }\n}\nfunction mapStateToProps(store) {\n  return {\n    isLoggedIn: store.isLoggedIn,\n    loadingFetch: store.loadingFetch,\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    isLoggedFetch: () => dispatch(isLoggedFetchAC()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivateRoute);\n","\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { connect } from 'react-redux'\nimport { isLoggedFetchAC } from '../../redux/actions/actions';\n\nclass HomeRoute extends React.Component {\n  async componentDidMount() {\n        //проверка авторизации\n        this.props.isLoggedFetch()\n      }\n    \n  \n  render() {\n    const Component = this.props.Component;\n    return (\n      <Route\n      {...this.props}\n      render={props => (\n          this.props.isLoggedIn === true\n          ? <Component {...props} />\n          : this.props.loadingFetch\n          ? <span className={'statustext'}>loading</span>\n          : <Redirect to='/' />\n        )}\n        />\n    )\n  }\n}\n\nfunction mapStateToProps(store) {\n  return {\n    isLoggedIn: store.isLoggedIn,\n    loadingFetch: store.loadingFetch,\n  }\n}\n\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    isLoggedFetch: () => dispatch(isLoggedFetchAC())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeRoute)\n\n","import RecipeItem from './RecipeItem';\n\nexport default RecipeItem;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Image, Text, DropButton, Heading } from 'grommet';\n\nconst RecipeItem = item => {\n  const {\n    name,\n    image,\n    _id,\n    ingredients,\n    priceTotal,\n    caloriesTotal,\n    category,\n    authorName,\n    hours,\n    minutes\n  } = item;\n  const ingredientsList = () => (\n    <Box margin=\"xsmall\">\n      {ingredients.map(item => (\n        <a\n          key={item.id}\n          style={{ textDecoration: 'none' }}\n          href={item.link}\n          target=\"_blank\"\n        >\n          {' '}\n          <Text size=\"small\" color=\"black\" margin=\"xsmall\">\n            {' '}\n            {item.name}\n          </Text>{' '}\n        </a>\n      ))}{' '}\n    </Box>\n  );\n  return (\n    <Box direction=\"row\">\n      <Box height=\"small\" width=\"small\" margin=\"xsmall\">\n        <Image src={image} alt={name} fit=\"cover\" />\n      </Box>\n      <Box direction=\"column\" width=\"medium\" align=\"start\">\n        <Link style={{ textDecoration: 'none' }} to={`/recipes/${_id}`}>\n          <Heading level=\"3\" margin=\"none\" color=\"#01a982\">\n            {' '}\n            {category} / {name}\n          </Heading>\n        </Link>\n\n        <Box alignSelf=\"start\">\n          <DropButton\n            style={{ border: 'none' }}\n            alignSelf=\"start\"\n            label={`Ингредиенты - ${ingredients.length}`}\n            dropAlign={{ top: 'bottom', left: 'left' }}\n            dropContent={ingredientsList()}\n          />\n        </Box>\n        <Box alignSelf=\"start\">\n          <Text>Стоимость рецепта: {priceTotal} руб. </Text>\n          <Text>Калорийность: {caloriesTotal} ккал </Text>\n          {/* <Text>Категория: {category}</Text> */}\n          <Text>Автор: {authorName}</Text>\n          <Text>\n            Время приготовления:{' '}\n            {hours === '0'\n              ? ''\n              : hours === '1'\n              ? `${hours} час`\n              : hours > 1 && hours < 5\n              ? `${hours} часа`\n              : `${hours} часов`}{' '}\n            {minutes !== '0' && `${minutes} минут`}{' '}\n          </Text>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default RecipeItem;\n","import SortPanel from './SortPanel';\n\nexport default SortPanel;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, Box, Button, Text } from 'grommet';\n\nexport default class SortPanel extends Component {\n  state = {\n    directionCal: '',\n    directionPrice: '',\n    id: ''\n  };\n\n  componentDidMount() {\n    this.randomRecipesFromApi();\n  }\n\n  randomRecipesFromApi = async () => {\n    const recipeId = await fetch('/api/recipes/random');\n    const respJson = await recipeId.json();\n    this.setState({ id: respJson.id });\n  };\n\n  toggleCal = () => {\n    switch (this.state.directionCal) {\n      case 'up':\n        this.setState({ directionCal: 'down', directionPrice: '' });\n        break;\n      case 'down':\n        this.setState({ directionCal: 'up', directionPrice: '' });\n        break;\n      default:\n        this.setState({ directionCal: 'up', directionPrice: '' });\n    }\n  };\n\n  togglePrice = () => {\n    switch (this.state.directionPrice) {\n      case 'up':\n        this.setState({ directionPrice: 'down', directionCal: '' });\n        break;\n      case 'down':\n        this.setState({ directionPrice: 'up', directionCal: '' });\n        break;\n      default:\n        this.setState({ directionPrice: 'up', directionCal: '' });\n    }\n  };\n\n  render() {\n    const {\n      recipesFromApiSortingByPrice,\n      recipesFromApiSortingByCalories\n    } = this.props;\n    const { directionCal, directionPrice, id } = this.state;\n    const priceButton =\n      directionPrice === 'up'\n        ? 'По цене ▼'\n        : directionPrice === 'down'\n          ? 'По цене ▲'\n          : 'По цене';\n    const calorieButton =\n      directionCal === 'up'\n        ? 'По калорийности ▼'\n        : directionCal === 'down'\n          ? 'По калорийности ▲'\n          : 'По калорийности';\n    return (\n      <Box width='large'>\n        <Grid\n          margin=\"xsmall\"\n          rows={['fit']}\n          columns={['fit', 'fit', 'fit', 'fit']}\n          gap=\"small\"\n          areas={[\n            { name: 'surprise', start: [0, 0], end: [1, 0] },\n            { name: 'sort', start: [1, 0], end: [2, 0] },\n            { name: 'sortButton1', start: [2, 0], end: [3, 0] },\n            { name: 'sortButton2', start: [3, 0], end: [4, 0] }\n          ]}\n        >\n          <Box gridArea=\"surprise\">\n            <Link to={'/recipes/' + id}>\n              <Button\n                style={{ \"border\": \"none\" }}\n                label=\"Удиви меня!\" />\n            </Link>\n          </Box>\n          <Box gridArea=\"sort\">\n            <Text margin=\"xsmall\">Сортировать:</Text>\n          </Box>\n          <Box gridArea=\"sortButton1\">\n            <Button\n              style={{ \"border\": \"none\" }}\n              label={priceButton}\n              onClick={() => {\n                recipesFromApiSortingByPrice(directionPrice);\n                this.togglePrice();\n              }}\n            />\n          </Box>\n          <Box gridArea=\"sortButton2\">\n            <Button\n              style={{ \"border\": \"none\" }}\n              label={calorieButton}\n              onClick={() => {\n                recipesFromApiSortingByCalories(directionCal);\n                this.toggleCal();\n              }}\n            />\n          </Box>\n        </Grid>\n      </Box>\n    );\n  }\n}\n","import React from 'react';\nimport { Select, Box, Text } from 'grommet';\n\nconst categories = [\n  'Любая категория',\n  'Холодная закуска',\n  'Горячая закуска',\n  'Суп',\n  'Горячее блюдо',\n  'Салат',\n  'Каша',\n  'Паста',\n  'Десерт'\n];\n\nexport default function CategorySelector({ recipesCategory, recipesFromApi }) {\n  const [value, setValue] = React.useState('');\n  return (\n    <Box direction=\"row\" width='midle' margin=\"xsmall\">\n      <Text margin='xsmall' alignSelf='center'> Выберите категорию: </Text>\n      <Select\n        value={value}\n        placeholder=\"Выберите категорию\"\n        options={categories}\n        onChange={({ option }) => {\n          setValue(option);\n          if (option === 'Любая категория') {\n            recipesFromApi()\n          } else recipesCategory(option)\n        }}\n      />\n    </Box>\n  );\n}\n","import CategorySelector from './CategorySelector';\n\nexport default CategorySelector;","import RecipeList from './RecipeList';\n\nexport default RecipeList;\n","import React, { Component } from 'react';\nimport RecipeItem from '../RecipeItem';\nimport SortPanel from '../SortPanel';\nimport CategorySelector from '../CategorySelector';\nimport { Heading, Box, Text } from 'grommet';\nimport './recipe-list.css'\n\nexport default class RecipeList extends Component {\n\n  state = {\n    recipes: []\n  }\n\n  componentDidMount() {\n    this.recipesFromApi();\n  }\n\n  recipesFromApi = async () => {\n    const recipes = await fetch('/api/recipes');\n    const respJson = await recipes.json();\n    this.setState({ recipes: respJson.recipes });\n  }\n\n  recipesFromApiSortingByPrice = async (direction) => {\n    const recipes = await fetch(`/api/recipes/price?direction=${direction}`);\n    const respJson = await recipes.json();\n    this.setState({ recipes: respJson.recipes });\n  }\n\n  recipesFromApiSortingByCalories = async (direction) => {\n    const recipes = await fetch(`/api/recipes/calorific?direction=${direction}`);\n    const respJson = await recipes.json();\n    this.setState({ recipes: respJson.recipes });\n  }\n\n  recipesCategory = async (category) => {\n    const recipes = await fetch(`/api/recipes/category/${category}`);\n    const respJson = await recipes.json();\n    this.setState({ recipes: respJson.recipes });\n  }\n\n  render() {\n    const { recipes } = this.state;\n\n    return (\n      <Box >\n        <Heading margin='large' textAlign='center'>Рецепты</Heading>\n        <Text margin='large' textAlign='center'>\n          Ищите рецепты, выбирая категорию блюда.\n          Рецепты можно отсортировать по цене и калорийности.\n          А чтобы не страдать от мук выбора, воспользуйтесь функцией \"Удиви меня!\": )\n          </Text>\n        <Box justify='center' align='center'>\n          <SortPanel\n            recipesFromApiSortingByPrice={this.recipesFromApiSortingByPrice}\n            recipesFromApiSortingByCalories={this.recipesFromApiSortingByCalories}\n          />\n        </Box>\n        <Box justify='center' align='center'>\n          <CategorySelector\n            recipesCategory={this.recipesCategory}\n            recipesFromApi={this.recipesFromApi}\n          />\n        </Box>\n        <Box justify=\"center\" alignSelf=\"center\">\n          {recipes.map((item) => {\n            return (\n              <Box key={item._id} align=\"start\" style={{ \"margin-top\": \"40px\" }}>\n                <RecipeItem {...item} />\n              </Box>\n            )\n          })\n          }\n        </Box>\n      </Box>\n    )\n  }\n}\n","import React from 'react';\nimport RecipeList from '../RecipeList';\nimport { Box } from 'grommet';\n\nexport default function Home() {\n  return (\n    <Box width='80%' elevation='medium' justify='center' align='center'>\n      <RecipeList />\n    </Box>\n  );\n}\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport RecipeItem from '../RecipeItem';\nimport { Link } from 'react-router-dom';\nimport { Box, Button, Text, Heading } from 'grommet';\n\nclass UserAccount extends Component {\n  state = {\n    recipes: []\n  };\n\n  componentDidMount() {\n    this.recipesFromApi();\n  }\n\n  recipesFromApi = async () => {\n    const recipes = await fetch(`/api/users/${this.props.userId}/recipes`);\n    const respJson = await recipes.json();\n    this.setState({ recipes: respJson.recipes });\n  };\n\n  deleteRecipe = async id => {\n    const responce = await fetch(`/api/recipes/${id}`, {\n      method: 'DELETE'\n    });\n    const respJson = await responce.json();\n    await console.log(respJson);\n    this.setState(({ recipes }) => {\n      const idx = recipes.findIndex(el => el._id === id);\n      console.log(idx);\n      const newRecipes = [...recipes];\n      newRecipes.splice(idx, 1);\n      return {\n        recipes: newRecipes\n      };\n    });\n  };\n\n  render() {\n    const { recipes } = this.state;\n\n    return (\n      <Box width='80%' elevation='medium' justify='center' align='center' >\n        <Box margin='large'>\n          <Heading margin='large' textAlign='center'>Мои рецепты</Heading>\n          {recipes.length === 0 &&\n            <Box margin=\"small\" justify=\"center\" align=\"center\">\n              <Text> У вас нет рецептов </Text>\n              <Text> Добавьте свой рецепт по этой <Link to={'/recipes/new'}>  ссылке </Link></Text>\n            </Box>}\n          {recipes.map(item => {\n            return (\n              <Box key={item._id} direction=\"column\" justify=\"center\" align=\"center\">\n                <RecipeItem {...item} />\n                <Box direction=\"row\" align='start'>\n                  <Link to={'/recipes/' + item._id + '/edit'}>\n                    <Button\n                      label=\"Редактировать\"\n                      margin=\"xsmall\"\n                    />\n                  </Link>\n                  <Button\n                    label=\"Удалить\"\n                    margin=\"xsmall\"\n                    onClick={() => this.deleteRecipe(item._id)}\n                  />\n                </Box>\n              </Box>\n            );\n          })}\n        </Box>\n      </Box>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return {\n    userId: store.userId,\n    userName: store.userName\n  };\n}\n\nexport default connect(mapStateToProps)(UserAccount);\n","import UserAccount from './UserAccount';\n\nexport default UserAccount;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Box, Grommet } from 'grommet';\nimport { hpe } from 'grommet-theme-hpe';\nimport { isLoggedFetchAC } from '../../redux/actions/actions';\nimport './app.css';\n\nimport Navbar from '../Navbar/navbar';\nimport Login from '../Login/login';\nimport Registration from '../Registration/registration';\nimport RecipeForm from '../RecipeForm/RecipeForm';\nimport RecipePage from '../RecipePage/RecipePage';\nimport RecipeEdit from '../RecipeForm/RecipeEdit';\n\nimport PrivateRoute from '../Routes/privateRoute';\nimport HomeRoute from '../Routes/homeRoute';\n\nimport Home from '../Home/homepage';\nimport UserAccount from '../UserAccount';\n\nclass App extends React.Component {\n  async componentDidMount() {\n    // проверка авторизации\n    this.props.isLoggedFetch();\n  }\n  render() {\n    // const theme = {\n    //   global: {\n    //     colors: {\n    //       brand: 'lightgreen',\n    //     },\n    //     font: {\n    //       family: 'Roboto',\n    //       size: '18px',\n    //       height: '20px',\n    //     },\n    //   },\n    // };\n    return (\n      <Router>\n        {/* <Grommet > */}\n        <Grommet theme={hpe}>\n          <Box flex align=\"center\" justify=\"center\">\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" render={() => <Home />} />\n              <Route exact path=\"/recipes\" component={Home} />\n              <PrivateRoute exact path=\"/recipes/new\" component={RecipeForm} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/registration\" component={Registration} />\n              <Route exact path=\"/recipes/:id\" component={RecipePage} />\n              <PrivateRoute\n                exact\n                path=\"/recipes/:id/edit\"\n                component={RecipeEdit}\n              />\n              <PrivateRoute exact path=\"/users/:username\" component={UserAccount} />\n              <PrivateRoute\n                exact\n                path=\"/recipes/:id/edit\"\n                component={RecipeEdit}\n\n              />\n            </Switch>\n          </Box>\n          {/* </Box> */}\n        </Grommet>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(store) {\n  return {\n    isLoggedIn: store.isLoggedIn,\n    userId: store.userId,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    isLoggedFetch: () => dispatch(isLoggedFetchAC()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  IS_LOGGED_GOT_RESPONSE,\n  IS_LOGGED_ERROR,\n  LOGIN_REQUEST,\n  LOGIN_GOT_RESPONSE,\n  LOGIN_ERROR,\n  REGISTER_REQUEST,\n  REGISTER_GOT_RESPONSE,\n  REGISTER_ERROR,\n  CLEAR_STATUS,\n  IS_LOGGED_REQUEST,\n  LOGOUT_REQUEST,\n  LOGOUT_GOT_RESPONSE,\n  LOGOUT_ERROR,\n  PARSE_REQUEST,\n  PARSE_GOT_RESPONSE,\n  PARSE_ERROR,\n  SET_CARD_DIMENSIONS,\n} from '../types/types';\n\nconst initialState = {\n  isLoggedIn: false,\n  loadingFetch: false,\n  logRegstatusError: '',\n  registrationStatus: '',\n  questions: [],\n  userId: '',\n  userName:'',\n  ingredientsParsed: [],\n  cardHeight: '',\n  cardWidth: '',\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    ///////////////////////isLoggedChecking//////////////////////\n    case IS_LOGGED_REQUEST: {\n      return {\n        ...state,\n        loadingFetch: true,\n        logRegstatusError: '',\n      };\n    }\n    case IS_LOGGED_GOT_RESPONSE: {\n      return {\n        ...state,\n        isLoggedIn: action.isLoggedIn,\n        loadingFetch: false,\n        logRegstatusError: '',\n        userId: action.userId,\n        userName: action.userName\n      };\n    }\n    case IS_LOGGED_ERROR: {\n      return {\n        ...state,\n        loadingFetch: false,\n        logRegstatusError: action.logRegstatusError,\n      };\n    }\n    ///////////////////////LOGIN////////////////////////////////\n    case LOGIN_REQUEST: {\n      return {\n        ...state,\n        isLoggedIn: false,\n        loadingFetch: true,\n        logRegstatusError: '',\n      };\n    }\n    case LOGIN_GOT_RESPONSE: {\n      return {\n        ...state,\n        isLoggedIn: action.isLoggedIn,\n        loadingFetch: false,\n        logRegstatusError: '',\n        userId: action.userId,\n        userName: action.userName\n      };\n    }\n    case LOGIN_ERROR: {\n      return {\n        ...state,\n        loadingFetch: false,\n        logRegstatusError: action.logRegstatusError,\n      };\n    }\n    ////////////////////REGISTRATION////////////////////////////\n    case REGISTER_REQUEST: {\n      return {\n        ...state,\n        loadingFetch: true,\n        logRegstatusError: '',\n      };\n    }\n    case REGISTER_GOT_RESPONSE: {\n      return {\n        ...state,\n        loadingFetch: false,\n        registrationStatus: action.registrationStatus,\n        logRegstatusError: '',\n      };\n    }\n    case REGISTER_ERROR: {\n      return {\n        ...state,\n        loadingFetch: false,\n        logRegstatusError: action.logRegstatusError,\n      };\n    }\n    case CLEAR_STATUS: {\n      return {\n        ...state,\n        loadingFetch: false,\n        logRegstatusError: '',\n        registrationStatus: '',\n      };\n    }\n    ////////////////////LOGOUT////////////////////////////\n    case LOGOUT_REQUEST: {\n      return {\n        ...state,\n        loadingFetch: true,\n        logRegstatusError: '',\n      };\n    }\n    case LOGOUT_GOT_RESPONSE: {\n      return {\n        ...state,\n        isLoggedIn: action.isLoggedIn,\n        loadingFetch: false,\n        logRegstatusError: '',\n        userId: '',\n        userName: ''\n      };\n    }\n    case LOGOUT_ERROR: {\n      return {\n        ...state,\n        loadingFetch: false,\n        logRegstatusError: action.logRegstatusError,\n      };\n    }\n    ////////////////////PARSE////////////////////////////\n    case PARSE_REQUEST: {\n      return {\n        ...state,\n        loadingFetch: true,\n        parseError: false,\n      };\n    }\n    case PARSE_GOT_RESPONSE: {\n      return {\n        ...state,\n        loadingFetch: false,\n        ingredientsParsed: action.ingredientsParsed,\n        parseError: false,\n      };\n    }\n    case PARSE_ERROR: {\n      return {\n        ...state,\n        loadingFetch: false,\n        parseError: action.parseError,\n      };\n    }\n    //////////////////SET_CARD_DIMENSIONS///////////////////\n    case SET_CARD_DIMENSIONS: {\n      return {\n        ...state,\n        cardHeight: action.cardHeight,\n        cardWidth: action.cardWidth,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport reducer from './redux/reducers/reducer';\n\nimport { watchFetches } from './redux/actions/actions';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware)),\n);\nsagaMiddleware.run(watchFetches);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App height=\"100%\" width=\"100%\" />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.7028c238.png\";"],"sourceRoot":""}